/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –µ–≥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º –±–æ—Ç–∞
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–µ–∫—É—â–∏–π URL –∏ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –µ–≥–æ —Å –æ–∂–∏–¥–∞–µ–º—ã–º production URL
 */

import fetch from 'node-fetch';
import dotenv from 'dotenv';
dotenv.config();

// –û–∂–∏–¥–∞–µ–º—ã–π production URL
const EXPECTED_PRODUCTION_URL = 'https://uni-farm-connect-2-misterxuniverse.replit.app';
const EXPECTED_MINI_APP_URL = `${EXPECTED_PRODUCTION_URL}/UniFarm`;

// Telegram Bot Token –∏–∑ .env
const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;

if (!TELEGRAM_BOT_TOKEN) {
  console.error('‚ùå –û—à–∏–±–∫–∞: TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
  process.exit(1);
}

async function callTelegramApi(method, data = {}) {
  const url = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/${method}`;
  
  try {
    const response = await fetch(url, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(data)
    });
    
    return await response.json();
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ API ${method}:`, error.message);
    return null;
  }
}

async function getCurrentHostname() {
  try {
    // –ü–æ–ø—ã—Ç–∞–µ–º—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–µ–∫—É—â–∏–π hostname –∏–∑ Replit
    const response = await fetch('https://replit.com/api/v1/repls/self', {
      headers: {
        'X-Requested-With': 'XMLHttpRequest'
      }
    });
    
    if (response.ok) {
      const data = await response.json();
      return data.url || null;
    }
    
    return null;
  } catch (error) {
    console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–µ–∫—É—â–∏–π hostname:', error.message);
    return null;
  }
}

async function getMenuButton() {
  const result = await callTelegramApi('getMyCommands');
  
  if (!result || !result.ok) {
    console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞');
    return null;
  }
  
  return result.result;
}

async function getWebhookInfo() {
  const result = await callTelegramApi('getWebhookInfo');
  
  if (!result || !result.ok) {
    console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook');
    return null;
  }
  
  return result.result;
}

function printComparisonTable(currentUrl, expectedUrl, webhookUrl, menuButtonUrl) {
  console.log('\n========================================================');
  console.log('üìã –°–†–ê–í–ù–ï–ù–ò–ï URL –ù–ê–°–¢–†–û–ï–ö UniFarm');
  console.log('--------------------------------------------------------');
  console.log(`üìå –¢–µ–∫—É—â–∏–π URL: ${currentUrl || '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω'}`);
  console.log(`üéØ –û–∂–∏–¥–∞–µ–º—ã–π URL: ${expectedUrl}`);
  console.log(`üîó URL –≤ webhook: ${webhookUrl || '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}`);
  console.log(`üîò URL –≤ –∫–Ω–æ–ø–∫–µ –º–µ–Ω—é: ${menuButtonUrl || '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}`);
  console.log('--------------------------------------------------------');
  
  // –°—Ç–∞—Ç—É—Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è
  const webhookMatch = webhookUrl && webhookUrl.includes(expectedUrl);
  const menuMatch = menuButtonUrl && menuButtonUrl.includes(expectedUrl);
  
  console.log(`Webhook —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–µ–º–æ–º—É URL: ${webhookMatch ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç'}`);
  console.log(`–ö–Ω–æ–ø–∫–∞ –º–µ–Ω—é —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–µ–º–æ–º—É URL: ${menuMatch ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç'}`);
  console.log('========================================================\n');
  
  // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  if (!webhookMatch || !menuMatch) {
    console.log('üîß –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
    console.log('--------------------------------------------------------');
    if (!webhookMatch) {
      console.log('1. –û–±–Ω–æ–≤–∏—Ç–µ webhook URL:');
      console.log('   node setup-telegram-webhook.js');
    }
    if (!menuMatch) {
      console.log(`${!webhookMatch ? '2' : '1'}. –û–±–Ω–æ–≤–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–Ω–æ–ø–æ–∫ –∏ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞:`);
      console.log('   node setup-telegram-mini-app.js');
    }
    console.log('--------------------------------------------------------');
  } else {
    console.log('‚úÖ –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ URL —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –æ–∂–∏–¥–∞–µ–º—ã–º. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è.');
  }
}

async function main() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ URL –Ω–∞—Å—Ç—Ä–æ–µ–∫ UniFarm...');
  
  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π hostname
  const currentHostname = await getCurrentHostname();
  
  // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook
  const webhookInfo = await getWebhookInfo();
  const webhookUrl = webhookInfo ? webhookInfo.url : null;
  
  // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–Ω–æ–ø–∫–µ –º–µ–Ω—é
  const commands = await getMenuButton();
  let menuButtonUrl = null;
  
  if (commands && commands.length > 0) {
    // –ò—â–µ–º –∫–æ–º–∞–Ω–¥—É /app –∏–ª–∏ /start —Å web_app
    const appCommand = commands.find(cmd => 
      (cmd.command === 'app' || cmd.command === 'start') && 
      cmd.description && 
      cmd.description.includes('UniFarm')
    );
    
    if (appCommand && appCommand.web_app_info) {
      menuButtonUrl = appCommand.web_app_info.url;
    }
  }
  
  // –í—ã–≤–æ–¥–∏–º —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—É—é —Ç–∞–±–ª–∏—Ü—É
  printComparisonTable(
    currentHostname,
    EXPECTED_PRODUCTION_URL,
    webhookUrl,
    menuButtonUrl
  );
}

main().catch(error => {
  console.error('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞:', error);
  process.exit(1);
});