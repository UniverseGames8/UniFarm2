/**
 * –°–£–ü–ï–† –ê–ì–†–ï–°–°–ò–í–ù–ê–Ø –û–ß–ò–°–¢–ö–ê –ö–ï–®–ê TELEGRAM MINI APP
 */

const BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const PRODUCTION_URL = 'https://uni-farm-connect-x-lukyanenkolawfa.replit.app';

async function superCacheClear() {
  console.log('üöÄ –°–£–ü–ï–† –ê–ì–†–ï–°–°–ò–í–ù–ê–Ø –û–ß–ò–°–¢–ö–ê –ö–ï–®–ê TELEGRAM');
  console.log('===============================================');
  
  try {
    // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π timestamp –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏
    const superTimestamp = Date.now();
    const randomId = Math.random().toString(36).substring(7);
    const superCacheBustUrl = `${PRODUCTION_URL}?force_reload=${superTimestamp}&cache_clear=${randomId}&v=${Date.now()}`;
    
    console.log('\nüî• 1. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –º–µ–Ω—é...');
    // –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º –º–µ–Ω—é –ø–æ–ª–Ω–æ—Å—Ç—å—é
    const deleteMenuResponse = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/setChatMenuButton`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        menu_button: { type: 'default' }
      })
    });
    
    const deleteResult = await deleteMenuResponse.json();
    console.log(deleteResult.ok ? '‚úÖ –°—Ç–∞—Ä–æ–µ –º–µ–Ω—é —É–¥–∞–ª–µ–Ω–æ' : '‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –º–µ–Ω—é');
    
    // –ñ–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã
    await new Promise(resolve => setTimeout(resolve, 2000));
    
    console.log('\nüéØ 2. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤–æ–µ –º–µ–Ω—é —Å —Å—É–ø–µ—Ä –∫–µ—à-–±–∞—Å—Ç–∏–Ω–≥–æ–º...');
    const newMenuResponse = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/setChatMenuButton`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        menu_button: {
          type: 'web_app',
          text: '–û—Ç–∫—Ä—ã—Ç—å UniFarm',
          web_app: { url: superCacheBustUrl }
        }
      })
    });
    
    const newMenuResult = await newMenuResponse.json();
    if (newMenuResult.ok) {
      console.log(`‚úÖ –ù–æ–≤–æ–µ –º–µ–Ω—é —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: ${superCacheBustUrl}`);
    } else {
      console.log(`‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–æ–≤–æ–≥–æ –º–µ–Ω—é: ${newMenuResult.description}`);
    }
    
    console.log('\nüîó 3. –û–±–Ω–æ–≤–ª—è–µ–º webhook —Å –¥—Ä–æ–ø–æ–º —Å—Ç–∞—Ä—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π...');
    const webhookResponse = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/setWebhook`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        url: `${PRODUCTION_URL}/api/telegram/webhook`,
        drop_pending_updates: true,
        allowed_updates: ["message", "callback_query"],
        max_connections: 1
      })
    });
    
    const webhookResult = await webhookResponse.json();
    console.log(webhookResult.ok ? '‚úÖ Webhook –æ–±–Ω–æ–≤–ª–µ–Ω' : '‚ùå –û—à–∏–±–∫–∞ webhook');
    
    console.log('\nüîç 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Ç–æ–≥–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...');
    const checkResponse = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/getWebhookInfo`);
    const checkResult = await checkResponse.json();
    
    if (checkResult.ok) {
      console.log(`üì° Webhook: ${checkResult.result.url}`);
      console.log(`üìä Pending: ${checkResult.result.pending_update_count}`);
    }
    
    console.log('\nüéâ –°–£–ü–ï–† –û–ß–ò–°–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!');
    console.log('===============================================');
    console.log('üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û:');
    console.log('1. ‚ö†Ô∏è  –ü–û–õ–ù–û–°–¢–¨–Æ –í–´–ô–î–ò–¢–ï –ò–ó TELEGRAM');
    console.log('2. üîÑ –ü–ï–†–ï–ó–ê–ü–£–°–¢–ò–¢–ï TELEGRAM –ü–†–ò–õ–û–ñ–ï–ù–ò–ï');
    console.log('3. üîç –ù–∞–π–¥–∏—Ç–µ –±–æ—Ç–∞ @UniFarming_Bot –∑–∞–Ω–æ–≤–æ');
    console.log('4. üéØ –ù–∞–∂–º–∏—Ç–µ "–û—Ç–∫—Ä—ã—Ç—å UniFarm"');
    console.log('');
    console.log('üí° –¢–æ–ª—å–∫–æ –ø–æ–ª–Ω—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ Telegram –ø–æ–º–æ–∂–µ—Ç!');
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Å—É–ø–µ—Ä –æ—á–∏—Å—Ç–∫–∏:', error.message);
  }
}

superCacheClear();