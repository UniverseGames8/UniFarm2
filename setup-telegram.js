/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram –±–æ—Ç–∞ –∏ –≤–µ–±—Ö—É–∫–∞
 * 
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ –∏ –≤–µ–±—Ö—É–∫–∞
 * —Å —Ü–µ–ª–µ–≤—ã–º URL –¥–ª—è Mini App –∏ –≤–µ–±—Ö—É–∫–∞.
 */

import fetch from 'node-fetch';
import dotenv from 'dotenv';
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

// –ü–æ–ª—É—á–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å–∫—Ä–∏–ø—Ç–∞
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// –¶–µ–ª–µ–≤–æ–π URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const TARGET_APP_URL = 'https://uni-farm-connect-x-lukyanenkolawfa.replit.app';
const WEBHOOK_PATH = '/api/telegram/webhook';

// –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
if (!BOT_TOKEN) {
  console.error('–û—à–∏–±–∫–∞: TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
  process.exit(1);
}

/**
 * –í—ã–∑—ã–≤–∞–µ—Ç –º–µ—Ç–æ–¥ Telegram Bot API
 */
async function callTelegramApi(method, data = {}) {
  try {
    const url = `https://api.telegram.org/bot${BOT_TOKEN}/${method}`;
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ–±—ä–µ–∫—Ç –≤ FormData
    const params = new URLSearchParams();
    Object.keys(data).forEach(key => {
      params.append(key, data[key]);
    });
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
    const response = await fetch(url, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
      },
      body: params
    });
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç
    const result = await response.json();
    
    if (!result.ok) {
      console.error(`–û—à–∏–±–∫–∞ API (${method}):`, result.description);
      return null;
    }
    
    return result.result;
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ API (${method}):`, error.message);
    return null;
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
 */
async function getBotInfo() {
  console.log('–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ...');
  return await callTelegramApi('getMe');
}

/**
 * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
 */
async function setCommands() {
  console.log('–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞...');
  
  const commands = [
    { command: 'start', description: '–ù–∞—á–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å UniFarm' },
    { command: 'help', description: '–ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é' },
    { command: 'deposit', description: '–í–Ω–µ—Å—Ç–∏ –¥–µ–ø–æ–∑–∏—Ç' },
    { command: 'withdraw', description: '–í—ã–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞' },
    { command: 'referral', description: '–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞' }
  ];
  
  return await callTelegramApi('setMyCommands', {
    commands: JSON.stringify(commands)
  });
}

/**
 * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–Ω–æ–ø–∫—É –º–µ–Ω—é —Å WebApp
 */
async function setMenuButton() {
  console.log('–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é...');
  
  const menuButton = {
    menu_button: JSON.stringify({
      type: 'web_app',
      text: '–û—Ç–∫—Ä—ã—Ç—å UniFarm',
      web_app: { url: TARGET_APP_URL }
    })
  };
  
  return await callTelegramApi('setMenuButton', menuButton);
}

/**
 * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤–µ–±—Ö—É–∫
 */
async function setWebhook() {
  console.log('–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞...');
  
  const webhookUrl = `${TARGET_APP_URL}${WEBHOOK_PATH}`;
  
  return await callTelegramApi('setWebhook', {
    url: webhookUrl,
    allowed_updates: JSON.stringify(['message', 'callback_query'])
  });
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –≤–µ–±—Ö—É–∫–µ
 */
async function getWebhookInfo() {
  console.log('–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–µ–±—Ö—É–∫–µ...');
  return await callTelegramApi('getWebhookInfo');
}

/**
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–æ–ª–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É –±–æ—Ç–∞
 */
async function setupBot() {
  console.log('\nü§ñ –ó–∞–ø—É—Å–∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram –±–æ—Ç–∞');
  console.log('==============================\n');
  
  // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
  const botInfo = await getBotInfo();
  if (!botInfo) {
    console.error('‚ùå –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω.');
    return false;
  }
  
  console.log(`‚úÖ –ë–æ—Ç @${botInfo.username} (${botInfo.first_name}) —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω`);
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
  const commands = await setCommands();
  if (commands) {
    console.log('‚úÖ –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
  } else {
    console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞');
  }
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –º–µ–Ω—é
  const menuButton = await setMenuButton();
  if (menuButton) {
    console.log(`‚úÖ –ö–Ω–æ–ø–∫–∞ –º–µ–Ω—é —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –¥–ª—è URL: ${TARGET_APP_URL}`);
  } else {
    console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É –º–µ–Ω—é');
  }
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ–±—Ö—É–∫
  const webhook = await setWebhook();
  if (webhook) {
    console.log(`‚úÖ –í–µ–±—Ö—É–∫ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞: ${TARGET_APP_URL}${WEBHOOK_PATH}`);
  } else {
    console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–µ–±—Ö—É–∫');
  }
  
  // –ü–æ–ª—É—á–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–µ–±—Ö—É–∫–µ
  const webhookInfo = await getWebhookInfo();
  if (webhookInfo) {
    console.log('\nüì° –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–µ–±—Ö—É–∫–µ:');
    console.log('URL:', webhookInfo.url);
    console.log('–û–∂–∏–¥–∞—é—â–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', webhookInfo.pending_update_count);
    console.log('–ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞:', webhookInfo.last_error_message || '–Ω–µ—Ç');
    console.log('–†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', webhookInfo.allowed_updates?.join(', ') || '–≤—Å–µ');
  }
  
  console.log('\n‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
  return true;
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
setupBot().catch(error => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –±–æ—Ç–∞:', error);
  process.exit(1);
});