/**
 * –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–µ—Å—Å–∏–π –∏ CORS
 * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Å—Å–∏—è–º–∏, cookies –∏ CORS-–Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
 * 
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * node session-and-cors-diagnosis.js [url]
 * 
 * url - –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä, URL –≤–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ CORS
 */

import { createRequire } from 'module';
const require = createRequire(import.meta.url);
const fs = require('fs');
const path = require('path');
const https = require('https');
const http = require('http');

// –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
const appUrl = process.argv[2] || 'https://uni-farm-connect-2-osadchukdmitro2.replit.app';

// –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
console.log('[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –°–µ—Å—Å–∏–∏] üîç –ù–∞—á–∞–ª–æ –∞–Ω–∞–ª–∏–∑–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–µ—Å—Å–∏–π –∏ CORS');
console.log(`[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –°–µ—Å—Å–∏–∏] üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º—ã–π URL: ${appUrl}`);

// –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Express
async function findExpressConfigFiles() {
  console.log('\n[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –°–µ—Å—Å–∏–∏] üîé –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ Express –∏ —Å–µ—Å—Å–∏–π...');
  
  // –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ Express –∏ —Å–µ—Å—Å–∏–π
  const potentialFiles = [
    './server/index.ts',
    './server/routes.ts',
    './server/app.ts',
    './index.ts',
    './app.ts'
  ];
  
  const foundFiles = [];
  
  for (const filePath of potentialFiles) {
    try {
      if (fs.existsSync(filePath)) {
        console.log(`[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –°–µ—Å—Å–∏–∏] ‚úÖ –ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª: ${filePath}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–µ—Å—Å–∏–π –∏ CORS
        const fileContent = fs.readFileSync(filePath, 'utf-8');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–¥–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Å—Å–∏–π
        const hasSessionConfig = fileContent.includes('express-session') || 
                                 fileContent.includes('cookie-session') ||
                                 fileContent.includes('session(');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–¥–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ CORS
        const hasCorsConfig = fileContent.includes('cors(') || 
                             fileContent.includes('Access-Control-Allow-Origin');
        
        // –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –Ω–∞–π–¥–µ–Ω–æ –≤ —Ñ–∞–π–ª–µ
        const fileFindings = [];
        if (hasSessionConfig) fileFindings.push('–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Å—Å–∏–π');
        if (hasCorsConfig) fileFindings.push('–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ CORS');
        
        foundFiles.push({
          path: filePath,
          hasSessionConfig,
          hasCorsConfig,
          notes: fileFindings.length > 0 ? 
                `–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã: ${fileFindings.join(', ')}` : 
                '–ù–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Å—Å–∏–π –∏–ª–∏ CORS'
        });
      }
    } catch (error) {
      console.error(`[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –°–µ—Å—Å–∏–∏] ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ñ–∞–π–ª–∞ ${filePath}:`, error.message);
    }
  }
  
  return foundFiles;
}

// –ê–Ω–∞–ª–∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–µ—Å—Å–∏–π –∏–∑ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
async function analyzeSessionSettings(files) {
  console.log('\n[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –°–µ—Å—Å–∏–∏] üîç –ê–Ω–∞–ª–∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–µ—Å—Å–∏–π...');
  
  // –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Å—Å–∏—è–º–∏
  const potentialIssues = [];
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ —Å–µ—Å—Å–∏–π
  for (const file of files) {
    if (file.hasSessionConfig) {
      try {
        const content = fs.readFileSync(file.path, 'utf-8');
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ cookies
        const hasSecureCookie = content.includes('secure: true');
        const hasSameSiteCookie = content.includes('sameSite');
        const hasHttpOnlyCookie = content.includes('httpOnly: true');
        
        if (!hasSecureCookie) {
          potentialIssues.push('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–ª–∞–≥ secure –¥–ª—è cookies');
        }
        
        if (!hasSameSiteCookie) {
          potentialIssues.push('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ sameSite –¥–ª—è cookies');
        }
        
        if (!hasHttpOnlyCookie) {
          potentialIssues.push('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–ª–∞–≥ httpOnly –¥–ª—è cookies');
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–µ—Å—Å–∏–π
        const usesMemoryStore = content.includes('MemoryStore') || 
                               !content.includes('Store');
        
        if (usesMemoryStore) {
          potentialIssues.push('–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è MemoryStore –¥–ª—è —Å–µ—Å—Å–∏–π, —á—Ç–æ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è production');
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ä–æ–∫–∞ –∂–∏–∑–Ω–∏ —Å–µ—Å—Å–∏–∏
        const sessionMaxAge = content.match(/maxAge:\s*(\d+)/);
        if (sessionMaxAge) {
          const maxAgeValue = parseInt(sessionMaxAge[1]);
          // –ï—Å–ª–∏ —Å—Ä–æ–∫ –∂–∏–∑–Ω–∏ —Å–µ—Å—Å–∏–∏ –º–µ–Ω—å—à–µ —á–∞—Å–∞ (3600000 –º—Å)
          if (maxAgeValue < 3600000) {
            potentialIssues.push(`–°—Ä–æ–∫ –∂–∏–∑–Ω–∏ —Å–µ—Å—Å–∏–∏ (${maxAgeValue} –º—Å) –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–º`);
          }
        } else {
          console.log('‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω–∞ —è–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ maxAge –¥–ª—è —Å–µ—Å—Å–∏–π');
        }
      } catch (error) {
        console.error(`[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –°–µ—Å—Å–∏–∏] ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Ñ–∞–π–ª–∞ ${file.path}:`, error.message);
      }
    }
  }
  
  return potentialIssues;
}

// –ê–Ω–∞–ª–∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ CORS –∏–∑ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
async function analyzeCorsSettings(files) {
  console.log('\n[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –°–µ—Å—Å–∏–∏] üîç –ê–Ω–∞–ª–∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ CORS...');
  
  // –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å CORS
  const potentialIssues = [];
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ CORS
  for (const file of files) {
    if (file.hasCorsConfig) {
      try {
        const content = fs.readFileSync(file.path, 'utf-8');
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ (origin)
        const hasTelegramDomain = content.includes('t.me') || 
                                 content.includes('telegram') ||
                                 content.includes('web.telegram');
        
        const hasStarOrigin = content.includes("origin: '*'") ||
                             content.includes("'*'") && content.includes('Access-Control-Allow-Origin');
        
        if (!hasTelegramDomain && !hasStarOrigin) {
          potentialIssues.push('–ù–µ –Ω–∞–π–¥–µ–Ω—ã —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è CORS –¥–ª—è –¥–æ–º–µ–Ω–æ–≤ Telegram');
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ credentials
        const hasCredentialsTrue = content.includes('credentials: true');
        
        if (!hasCredentialsTrue) {
          potentialIssues.push('–ù–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ credentials: true, –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞—è –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ cookies');
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
        const hasAllowedHeaders = content.includes('allowedHeaders') || 
                                content.includes('Access-Control-Allow-Headers');
        
        if (!hasAllowedHeaders) {
          potentialIssues.push('–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è CORS');
        }
      } catch (error) {
        console.error(`[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –°–µ—Å—Å–∏–∏] ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Ñ–∞–π–ª–∞ ${file.path}:`, error.message);
      }
    }
  }
  
  return potentialIssues;
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ CORS –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
async function checkServerCorsHeaders() {
  console.log('\n[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –°–µ—Å—Å–∏–∏] üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ CORS –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...');
  
  return new Promise((resolve) => {
    try {
      // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –º–æ–¥—É–ª—å –¥–ª—è HTTP –∏–ª–∏ HTTPS –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–æ—Ç–æ–∫–æ–ª–∞
      const requestModule = appUrl.startsWith('https') ? https : http;
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ origin, –∫–∞–∫ –µ—Å–ª–∏ –±—ã –∑–∞–ø—Ä–æ—Å —à–µ–ª –∏–∑ Telegram
      const options = {
        method: 'OPTIONS',
        headers: {
          'Origin': 'https://web.telegram.org',
          'Access-Control-Request-Method': 'POST',
          'Access-Control-Request-Headers': 'content-type,telegram-data'
        }
      };
      
      // –î–µ–ª–∞–µ–º –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å OPTIONS –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ CORS
      const req = requestModule.request(appUrl, options, (res) => {
        console.log(`[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –°–µ—Å—Å–∏–∏] ‚úÖ –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: ${res.statusCode}`);
        
        // –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ CORS –∏–∑ –æ—Ç–≤–µ—Ç–∞
        const corsHeaders = {
          allowOrigin: res.headers['access-control-allow-origin'],
          allowMethods: res.headers['access-control-allow-methods'],
          allowHeaders: res.headers['access-control-allow-headers'],
          allowCredentials: res.headers['access-control-allow-credentials'],
          exposeHeaders: res.headers['access-control-expose-headers'],
          maxAge: res.headers['access-control-max-age']
        };
        
        console.log('[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –°–µ—Å—Å–∏–∏] üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏ CORS –≤ –æ—Ç–≤–µ—Ç–µ:');
        for (const [header, value] of Object.entries(corsHeaders)) {
          console.log(`   ${header}: ${value || '<–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç>'}`);
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã CORS
        const corsIssues = [];
        
        if (!corsHeaders.allowOrigin) {
          corsIssues.push('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ Access-Control-Allow-Origin');
        } else if (corsHeaders.allowOrigin !== '*' && !corsHeaders.allowOrigin.includes('telegram')) {
          corsIssues.push(`Access-Control-Allow-Origin –Ω–µ —Ä–∞–∑—Ä–µ—à–∞–µ—Ç –¥–æ–º–µ–Ω—ã Telegram: ${corsHeaders.allowOrigin}`);
        }
        
        if (!corsHeaders.allowCredentials || corsHeaders.allowCredentials !== 'true') {
          corsIssues.push('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –≤—ã–∫–ª—é—á–µ–Ω –∑–∞–≥–æ–ª–æ–≤–æ–∫ Access-Control-Allow-Credentials, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –¥–ª—è cookies');
        }
        
        if (!corsHeaders.allowHeaders) {
          corsIssues.push('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ Access-Control-Allow-Headers');
        } else if (!corsHeaders.allowHeaders.includes('telegram-data')) {
          corsIssues.push('Access-Control-Allow-Headers –Ω–µ —Ä–∞–∑—Ä–µ—à–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ telegram-data');
        }
        
        resolve(corsIssues);
      });
      
      req.on('error', (error) => {
        console.error('[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –°–µ—Å—Å–∏–∏] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ CORS –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤:', error.message);
        resolve(['–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ CORS: ' + error.message]);
      });
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç 5 —Å–µ–∫—É–Ω–¥
      req.setTimeout(5000, () => {
        console.error('[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –°–µ—Å—Å–∏–∏] ‚ö†Ô∏è –¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ CORS –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤');
        req.destroy();
        resolve(['–¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ CORS']);
      });
      
      req.end();
    } catch (error) {
      console.error('[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –°–µ—Å—Å–∏–∏] ‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ CORS:', error);
      resolve(['–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ CORS: ' + error.message]);
    }
  });
}

// –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫
async function runAllTests() {
  try {
    // –ò—â–µ–º —Ñ–∞–π–ª—ã —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    const configFiles = await findExpressConfigFiles();
    
    if (configFiles.length === 0) {
      console.log('[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –°–µ—Å—Å–∏–∏] ‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ Express');
    } else {
      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Å—Å–∏–π
      const sessionIssues = await analyzeSessionSettings(configFiles);
      
      console.log('\n[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –°–µ—Å—Å–∏–∏] üìã –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Å—Å–∏—è–º–∏:');
      if (sessionIssues.length === 0) {
        console.log('‚úÖ –Ø–≤–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ —Å–µ—Å—Å–∏–π –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ');
      } else {
        sessionIssues.forEach(issue => console.log(`‚ö†Ô∏è ${issue}`));
      }
      
      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ CORS
      const corsIssues = await analyzeCorsSettings(configFiles);
      
      console.log('\n[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –°–µ—Å—Å–∏–∏] üìã –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å CORS (–∏–∑ –∫–æ–¥–∞):');
      if (corsIssues.length === 0) {
        console.log('‚úÖ –Ø–≤–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ CORS –≤ –∫–æ–¥–µ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ');
      } else {
        corsIssues.forEach(issue => console.log(`‚ö†Ô∏è ${issue}`));
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ CORS –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    try {
      const serverCorsIssues = await checkServerCorsHeaders();
      
      console.log('\n[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –°–µ—Å—Å–∏–∏] üìã –ü—Ä–æ–±–ª–µ–º—ã —Å CORS –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:');
      if (serverCorsIssues.length === 0) {
        console.log('‚úÖ –Ø–≤–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º —Å CORS –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ');
      } else {
        serverCorsIssues.forEach(issue => console.log(`‚ö†Ô∏è ${issue}`));
      }
    } catch (error) {
      console.error('[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –°–µ—Å—Å–∏–∏] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ CORS –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:', error);
    }
    
    // –û–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    console.log('\n[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –°–µ—Å—Å–∏–∏] üìù –û–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
    console.log('1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –¥–ª—è —Å–µ—Å—Å–∏–æ–Ω–Ω—ã—Ö cookies —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —Ñ–ª–∞–≥–∏ Secure –∏ SameSite');
    console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ CORS –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç –¥–æ–º–µ–Ω–æ–≤ Telegram');
    console.log('3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ credentials: true —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ cookies –≤ CORS –∑–∞–ø—Ä–æ—Å–∞—Ö');
    console.log('4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∞–¥–µ–∂–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è —Å–µ—Å—Å–∏–π –≤–º–µ—Å—Ç–æ MemoryStore');
    console.log('5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Å—Ä–æ–∫ –∂–∏–∑–Ω–∏ —Å–µ—Å—Å–∏–π –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–æ–ª–≥–∏–π –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
    
    console.log('\n[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –°–µ—Å—Å–∏–∏] üèÅ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.');
    
  } catch (error) {
    console.error('[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –°–µ—Å—Å–∏–∏] ‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Ç–µ—Å—Ç—ã
runAllTests();