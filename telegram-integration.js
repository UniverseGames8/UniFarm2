/**
 * –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è Telegram Mini App —Å UniFarm
 * 
 * –≠—Ç–æ—Ç –º–æ–¥—É–ª—å –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç:
 * 1. –ö–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –¥–∞–Ω–Ω—ã—Ö –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –æ—Ç Telegram
 * 2. –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ Telegram
 * 3. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 * 
 * –ú–æ–¥—É–ª—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –≤ –ø—Ä–æ–µ–∫—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏.
 */

const crypto = require('crypto');
const express = require('express');

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö initData –æ—Ç Telegram
 * @param {string} initData - –°—Ç—Ä–æ–∫–∞ initData –æ—Ç Telegram
 * @param {string} botToken - –¢–æ–∫–µ–Ω –±–æ—Ç–∞ Telegram
 * @returns {boolean} - –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
 */
function validateTelegramInitData(initData, botToken) {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏ –¥–∞–Ω–Ω—ã—Ö
    if (!botToken || !initData) {
      return false;
    }
    
    // –†–∞–∑–±–∏—Ä–∞–µ–º —Å—Ç—Ä–æ–∫—É initData
    const urlParams = new URLSearchParams(initData);
    const hash = urlParams.get('hash');
    
    if (!hash) {
      return false;
    }
    
    // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    const dataCheckArr = [];
    
    // –°–æ–∑–¥–∞–µ–º –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ (–±–µ–∑ hash)
    urlParams.forEach((val, key) => {
      if (key !== 'hash') {
        dataCheckArr.push(`${key}=${val}`);
      }
    });
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤
    dataCheckArr.sort();
    
    // –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–æ–∫—É –¥–∞–Ω–Ω—ã—Ö
    const dataCheckString = dataCheckArr.join('\n');
    
    // –°–æ–∑–¥–∞–µ–º HMAC-SHA-256 –ø–æ–¥–ø–∏—Å—å
    const secretKey = crypto.createHmac('sha256', 'WebAppData').update(botToken).digest();
    const calculatedHash = crypto.createHmac('sha256', secretKey)
      .update(dataCheckString)
      .digest('hex');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å—å
    return calculatedHash === hash;
  } catch (error) {
    console.error('[Telegram Integration] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∏:', error.message);
    return false;
  }
}

/**
 * –ò–∑–≤–ª–µ–∫–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å—Ç—Ä–æ–∫–∏ initData
 * @param {string} initData - –°—Ç—Ä–æ–∫–∞ initData –æ—Ç Telegram
 * @returns {Object|null} - –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ null –ø—Ä–∏ –æ—à–∏–±–∫–µ
 */
function extractUserData(initData) {
  try {
    const urlParams = new URLSearchParams(initData);
    const userStr = urlParams.get('user');
    
    if (!userStr) {
      return null;
    }
    
    return JSON.parse(userStr);
  } catch (error) {
    console.error('[Telegram Integration] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error.message);
    return null;
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç startParam –∏–∑ —Å—Ç—Ä–æ–∫–∏ initData (–¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞)
 * @param {string} initData - –°—Ç—Ä–æ–∫–∞ initData –æ—Ç Telegram
 * @returns {string|null} - –ó–Ω–∞—á–µ–Ω–∏–µ startParam –∏–ª–∏ null
 */
function getStartParam(initData) {
  try {
    const urlParams = new URLSearchParams(initData);
    return urlParams.get('start_param');
  } catch {
    return null;
  }
}

/**
 * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Telegram Mini App
 * @param {Object} app - Express-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
 * @param {Object} storage - –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
 */
function setupTelegramRoutes(app, storage) {
  if (!app) return;
  
  // –°–æ–∑–¥–∞–µ–º middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ—Ç Telegram
  const telegramAuthMiddleware = (req, res, next) => {
    try {
      // –ü–æ–ª—É—á–∞–µ–º initData –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
      const initData = req.body.initData || 
                       req.headers['telegram-init-data'] || 
                       req.headers['x-telegram-init-data'];
      
      // –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
      if (!initData) {
        return next();
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
      let isValid = true;
      if (process.env.TELEGRAM_BOT_TOKEN) {
        isValid = validateTelegramInitData(initData, process.env.TELEGRAM_BOT_TOKEN);
        
        if (!isValid && process.env.NODE_ENV !== 'development') {
          console.warn('[Telegram Integration] ‚ö†Ô∏è –ù–µ–≤–∞–ª–∏–¥–Ω–∞—è –ø–æ–¥–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –æ—Ç Telegram');
        }
      }
      
      // –î–∞–∂–µ –µ—Å–ª–∏ –ø–æ–¥–ø–∏—Å—å –Ω–µ–≤–∞–ª–∏–¥–Ω–∞, –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –º—ã –∏–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ
      // –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ (–≤ production —ç—Ç–æ –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è)
      if (isValid || process.env.NODE_ENV === 'development') {
        // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const userData = extractUserData(initData);
        if (userData) {
          req.telegramUser = userData;
          
          // –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –≤—ã–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          if (process.env.NODE_ENV === 'development') {
            console.log('[Telegram Integration] üë§ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', {
              id: userData.id,
              username: userData.username,
              first_name: userData.first_name,
              last_name: userData.last_name
            });
          }
        }
        
        // –ü–æ–ª—É—á–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –∏–∑ startParam
        const startParam = getStartParam(initData);
        if (startParam) {
          req.telegramStartParam = startParam;
          console.log('[Telegram Integration] üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥:', startParam);
        }
      }
      
      next();
    } catch (error) {
      console.error('[Telegram Integration] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–∞–Ω–Ω—ã—Ö Telegram:', error.message);
      next();
    }
  };
  
  // –ü—Ä–∏–º–µ–Ω—è–µ–º middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö API-–∑–∞–ø—Ä–æ—Å–æ–≤
  app.use('/api', telegramAuthMiddleware);
  
  // –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏ —Å –¥–∞–Ω–Ω—ã–º–∏ Telegram
  app.post('/api/telegram/auth', async (req, res) => {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram
      if (!req.telegramUser) {
        return res.status(400).json({
          success: false,
          error: '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∏–ª–∏ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã –¥–∞–Ω–Ω—ã–µ Telegram'
        });
      }
      
      // –ï—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
      if (storage && typeof storage.getUserByTelegramId === 'function') {
        try {
          let user = await storage.getUserByTelegramId(req.telegramUser.id.toString());
          
          // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ
          if (!user) {
            console.log(`[Telegram Integration] üÜï –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è Telegram ID: ${req.telegramUser.id}`);
            
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –≥–æ—Å—Ç–µ–≤–æ–π ID
            const guestId = crypto.randomUUID();
            
            // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ Telegram
            user = await storage.createUser({
              username: req.telegramUser.username || `user_${req.telegramUser.id}`,
              telegram_id: req.telegramUser.id.toString(),
              first_name: req.telegramUser.first_name,
              last_name: req.telegramUser.last_name || '',
              guest_id: guestId,
              // –ï—Å–ª–∏ –µ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ
              parent_ref_code: req.telegramStartParam || null
            });
            
            console.log(`[Telegram Integration] ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω —Å ID: ${user.id}`);
          } else {
            console.log(`[Telegram Integration] ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω —Å ID: ${user.id}`);
          }
          
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–µ—Å—Å–∏–∏
          if (req.session) {
            req.session.userId = user.id;
            req.session.user = {
              id: user.id,
              username: user.username,
              telegram_id: user.telegram_id
            };
            console.log(`[Telegram Integration] ‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Å–µ—Å—Å–∏–∏`);
          }
          
          // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          return res.json({
            success: true,
            data: {
              user_id: user.id,
              username: user.username,
              telegram_id: user.telegram_id,
              balance_uni: user.balance_uni,
              balance_ton: user.balance_ton,
              ref_code: user.ref_code,
              created_at: user.created_at
            }
          });
        } catch (storageError) {
          console.error('[Telegram Integration] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å —Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º:', storageError.message);
          return res.status(500).json({
            success: false,
            error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
          });
        }
      } else {
        // –ï—Å–ª–∏ storage –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–∞–Ω–Ω—ã–µ –∏–∑ Telegram
        return res.json({
          success: true,
          data: {
            telegram_id: req.telegramUser.id,
            username: req.telegramUser.username,
            first_name: req.telegramUser.first_name,
            last_name: req.telegramUser.last_name,
            is_temporary: true
          }
        });
      }
    } catch (error) {
      console.error('[Telegram Integration] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error.message);
      return res.status(500).json({
        success: false,
        error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏'
      });
    }
  });
  
  // –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  app.get('/api/telegram/me', (req, res) => {
    if (!req.session || !req.session.user) {
      return res.status(401).json({
        success: false,
        error: '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω'
      });
    }
    
    return res.json({
      success: true,
      data: req.session.user
    });
  });
  
  // –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
  app.post('/api/telegram/logout', (req, res) => {
    if (req.session) {
      req.session.destroy();
    }
    
    return res.json({
      success: true,
      message: '–í—ã—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ'
    });
  });
  
  console.log('[Telegram Integration] ‚úÖ –ú–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Telegram –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
}

/**
 * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø–æ–ª–Ω—É—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å Telegram Mini App
 * @param {Object} app - Express-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
 * @param {Object} storage - –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
 * @returns {Object} - Express-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π
 */
function setupTelegramIntegration(app, storage) {
  if (!app) {
    throw new Error('[Telegram Integration] –ù–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Express');
  }
  
  console.log('[Telegram Integration] üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Telegram Mini App...');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞
  if (!process.env.TELEGRAM_BOT_TOKEN) {
    console.warn('[Telegram Integration] ‚ö†Ô∏è –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
    console.warn('–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö Telegram –±—É–¥–µ—Ç –æ—Ç–∫–ª—é—á–µ–Ω–∞');
  }
  
  // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram
  setupTelegramRoutes(app, storage);
  
  console.log('[Telegram Integration] ‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Telegram Mini App –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞');
  
  return app;
}

module.exports = {
  setupTelegramIntegration,
  validateTelegramInitData,
  extractUserData
};