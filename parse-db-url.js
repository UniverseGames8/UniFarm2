/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç—Ä–æ–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è DATABASE_URL
 */

// –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–æ–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
const dbUrl = process.env.DATABASE_URL;

if (!dbUrl) {
  console.error('‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è DATABASE_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
  process.exit(1);
}

// –ú–∞—Å–∫–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
const maskedUrl = dbUrl.replace(/:[^:]*@/, ':****@');

console.log('üìä –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä–æ–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è DATABASE_URL:');
console.log(`–ü–æ–ª–Ω—ã–π URL (—Å –º–∞—Å–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º): ${maskedUrl}`);

// –ü–∞—Ä—Å–∏–Ω–≥ URL
try {
  // –°–æ–∑–¥–∞–µ–º URL –æ–±—ä–µ–∫—Ç –¥–ª—è —Ä–∞–∑–±–æ—Ä–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
  // –ù—É–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å postgresql:// –Ω–∞ https:// –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞
  const parsedUrl = new URL(dbUrl.replace(/^postgresql:\/\//, 'https://'));
  
  console.log('\nüîç –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã URL:');
  console.log(`–ü—Ä–æ—Ç–æ–∫–æ–ª: postgresql://`);
  console.log(`–•–æ—Å—Ç: ${parsedUrl.hostname}`);
  console.log(`–ü–æ—Ä—Ç: ${parsedUrl.port || '5432 (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)'}`);
  console.log(`–ü—É—Ç—å (–±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö): ${parsedUrl.pathname.substring(1)}`);
  console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${parsedUrl.username}`);
  console.log(`–ü–∞—Ä–æ–ª—å: [–°–ö–†–´–¢]`);
  
  // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
  console.log('\nüîß –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞:');
  for (const [key, value] of parsedUrl.searchParams) {
    console.log(`${key}: ${value}`);
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ SSL
  console.log('\nüîí –ü—Ä–æ–≤–µ—Ä–∫–∞ SSL –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤:');
  const sslmode = parsedUrl.searchParams.get('sslmode');
  if (sslmode) {
    console.log(`sslmode: ${sslmode}`);
  } else {
    console.log('‚ö†Ô∏è –ü–∞—Ä–∞–º–µ—Ç—Ä sslmode –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ URL');
  }
  
  // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  console.log('\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
  if (!sslmode || sslmode !== 'require') {
    console.log('- –î–æ–±–∞–≤—å—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä sslmode=require –≤ URL –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è');
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ —Ö–æ—Å—Ç–∞ –¥–ª—è Neon
  if (!parsedUrl.hostname.includes('neon.tech')) {
    console.log('‚ö†Ô∏è –•–æ—Å—Ç –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–æ–º–µ–Ω neon.tech. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å URL.');
  } else {
    console.log('‚úì –§–æ—Ä–º–∞—Ç —Ö–æ—Å—Ç–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç Neon.');
  }
  
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ URL:', error.message);
}