/**
 * –Ñ–î–ò–ù–ò–ô –ú–û–î–£–õ–¨ –ü–Ü–î–ö–õ–Æ–ß–ï–ù–ù–Ø –î–û –ë–î
 * 
 * –¶–µ —î–¥–∏–Ω–µ –¥–∂–µ—Ä–µ–ª–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –∑ 10 –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º–∏.
 * –í—Å—ñ —ñ–Ω—à—ñ –º–æ–¥—É–ª—ñ –ø–æ–≤–∏–Ω–Ω—ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ —Ü–µ–π —Ñ–∞–π–ª.
 */

import { Pool } from 'pg';
import { drizzle } from 'drizzle-orm/node-postgres';
import * as schema from '../shared/schema.js';

// –Ñ–î–ò–ù–ê –ü–†–ê–í–ò–õ–¨–ù–ê –ë–ê–ó–ê –î–ê–ù–ò–• - –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∑–º—ñ–Ω–Ω—É –æ—Ç–æ—á–µ–Ω–Ω—è
const CORRECT_DB_URL = process.env.DATABASE_URL || 'postgresql://neondb_owner:npg_SpgdNBV70WKl@ep-lucky-boat-a463bggt-pooler.us-east-1.aws.neon.tech/neondb?sslmode=require';

let singlePool: Pool | null = null;
let singleDb: any = null;

// –û—á–∏—â–∞—î–º–æ –∫–µ—à –ø—Ä–∏ –∫–æ–∂–Ω–æ–º—É –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫—É
singlePool = null;
singleDb = null;

/**
 * –û—Ç—Ä–∏–º—É—î —î–¥–∏–Ω–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
 */
export async function getSingleDbConnection() {
  if (!singlePool) {
    console.log('üéØ [SINGLE DB] –°—Ç–≤–æ—Ä—é—é —î–¥–∏–Ω–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—ó –±–∞–∑–∏ –∑ 10 –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º–∏');
    
    singlePool = new Pool({
      connectionString: CORRECT_DB_URL,
      ssl: { rejectUnauthorized: false },
      max: 10,
      idleTimeoutMillis: 30000,
      connectionTimeoutMillis: 10000,
    });
    
    singleDb = drizzle(singlePool, { schema });
    
    // –¢–µ—Å—Ç—É—î–º–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
    try {
      const result = await singlePool.query('SELECT COUNT(*) as count FROM users');
      const userCount = parseInt(result.rows[0].count);
      console.log(`‚úÖ [SINGLE DB] –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–µ! –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤: ${userCount}`);
    } catch (error) {
      console.error('‚ùå [SINGLE DB] –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è:', error);
      throw error;
    }
  }
  
  return singleDb;
}

/**
 * –û—Ç—Ä–∏–º—É—î –ø—É–ª –ø—ñ–¥–∫–ª—é—á–µ–Ω—å
 */
export async function getSinglePool() {
  if (!singlePool) {
    await getSingleDbConnection();
  }
  return singlePool!;
}

/**
 * –í–∏–∫–æ–Ω—É—î SQL –∑–∞–ø–∏—Ç —á–µ—Ä–µ–∑ —î–¥–∏–Ω–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
 */
export async function querySingleDb(query: string, params: any[] = []) {
  const pool = await getSinglePool();
  return pool.query(query, params);
}

// –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –¥–ª—è –∑–≤–æ—Ä–æ—Ç–Ω–æ—ó —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ
export const db = getSingleDbConnection;
export const pool = getSinglePool;
export const queryDb = querySingleDb;