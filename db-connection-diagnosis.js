/**
 * –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
 * –ó–∞–ø—É—Å–∫–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ –æ—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –∏–∑–æ–ª—è—Ü–∏–∏ –ø—Ä–æ–±–ª–µ–º
 * 
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * node db-connection-diagnosis.js
 */

// –Ø–≤–Ω–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–∫—Å–∞ –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
console.log('[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞] üìä –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–∫—Å–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î...');

// –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º Unix —Å–æ–∫–µ—Ç—ã –¥–ª—è PostgreSQL
process.env.PGHOST = process.env.PGHOST || 'localhost';  
process.env.PGSSLMODE = 'prefer';
process.env.PGSOCKET = ''; 
process.env.PGCONNECT_TIMEOUT = '10';

// –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞ Neon DB
process.env.DATABASE_PROVIDER = 'neon';
process.env.FORCE_NEON_DB = 'true';
process.env.DISABLE_REPLIT_DB = 'true';
process.env.OVERRIDE_DB_PROVIDER = 'neon';

console.log('[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞] ‚úÖ –§–∏–∫—Å –¥–ª—è –ë–î –ø—Ä–∏–º–µ–Ω–µ–Ω');

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ë–î
import { createRequire } from 'module';
const require = createRequire(import.meta.url);
const { Pool } = require('pg');

// –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
console.log('\n[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞] üìã –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î:');
console.log('DATABASE_PROVIDER =', process.env.DATABASE_PROVIDER || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
console.log('FORCE_NEON_DB =', process.env.FORCE_NEON_DB || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
console.log('DISABLE_REPLIT_DB =', process.env.DISABLE_REPLIT_DB || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
console.log('OVERRIDE_DB_PROVIDER =', process.env.OVERRIDE_DB_PROVIDER || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
console.log('PGSSLMODE =', process.env.PGSSLMODE || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
console.log('PGSOCKET =', process.env.PGSOCKET || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ)');
console.log('PGCONNECT_TIMEOUT =', process.env.PGCONNECT_TIMEOUT || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º DATABASE_URL
if (!process.env.DATABASE_URL) {
  console.error('[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞] ‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω!');
  console.error('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Neon DB.');
  process.exit(1);
} else {
  // –ú–∞—Å–∫–∏—Ä—É–µ–º URL –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ –ª–æ–≥–∞—Ö
  const maskedUrl = process.env.DATABASE_URL.replace(/\/\/([^:]+):([^@]+)@/, '//\\1:***@');
  console.log('\n[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞] üîê DATABASE_URL:', maskedUrl);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ URL —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ Neon DB
  if (process.env.DATABASE_URL.includes('neon.tech')) {
    console.log('[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞] ‚úÖ –°—Ç—Ä–æ–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ Neon DB');
  } else {
    console.warn('[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞] ‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: DATABASE_URL –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–æ–º–µ–Ω neon.tech. –≠—Ç–æ –º–æ–∂–µ—Ç –Ω–µ –±—ã—Ç—å Neon DB!');
  }
}

// –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
console.log('\n[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞] üîÑ –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');

// –°–æ–∑–¥–∞–µ–º –ø—É–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ Neon DB
const pool = new Pool({
  connectionString: process.env.DATABASE_URL,
  ssl: {
    rejectUnauthorized: false // –î–ª—è Neon DB
  },
  // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –ø—É–ª–∞ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
  max: 5,
  idleTimeoutMillis: 10000,
  connectionTimeoutMillis: 5000
});

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
pool.on('error', (err) => {
  console.error('[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞] ‚ùå –û—à–∏–±–∫–∞ –ø—É–ª–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π:', err.message);
});

pool.on('connect', () => {
  console.log('[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞] ‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ø—É–ª–æ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
});

// –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
async function testConnection() {
  console.log('\n[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞] üî¨ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–û–ï–î–ò–ù–ï–ù–ò–Ø –° –ë–ê–ó–û–ô –î–ê–ù–ù–´–•');
  
  try {
    // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ –ø—É–ª–∞
    console.log('[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞] üîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ –ø—É–ª–∞...');
    const client = await pool.connect();
    console.log('[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞] ‚úÖ –ö–ª–∏–µ–Ω—Ç—Å–∫–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ');
    
    // –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    console.log('[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞] üîÑ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞...');
    const result = await client.query('SELECT NOW() as time');
    console.log('[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞] ‚úÖ –ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ. –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ –ë–î:', result.rows[0].time);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ PostgreSQL
    const versionResult = await client.query('SELECT version()');
    console.log('[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞] üìä –í–µ—Ä—Å–∏—è PostgreSQL:', versionResult.rows[0].version);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    console.log('\n[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞] üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    const tablesResult = await client.query(`
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_schema = 'public'
      ORDER BY table_name
      LIMIT 10;
    `);
    
    if (tablesResult.rows.length === 0) {
      console.log('[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞] ‚ö†Ô∏è –¢–∞–±–ª–∏—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ —Å—Ö–µ–º–µ public');
    } else {
      console.log(`[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞] ‚úÖ –ù–∞–π–¥–µ–Ω–æ ${tablesResult.rows.length} —Ç–∞–±–ª–∏—Ü:`);
      tablesResult.rows.forEach((row, index) => {
        console.log(`   ${index + 1}. ${row.table_name}`);
      });
    }
    
    // –ü–æ–ø—Ä–æ–±—É–µ–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    try {
      console.log('\n[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞] üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
      const usersResult = await client.query(`
        SELECT COUNT(*) as count 
        FROM auth_users
      `);
      
      console.log(`[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞] ‚úÖ –ù–∞–π–¥–µ–Ω–æ ${usersResult.rows[0].count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ`);
    } catch (error) {
      console.error('[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞] ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error.message);
    }
    
    // –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞
    client.release();
    console.log('\n[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞] ‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
    
  } catch (error) {
    console.error('[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞] ‚ùå –û–®–ò–ë–ö–ê –ü–†–ò –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ò –ö –ë–ê–ó–ï –î–ê–ù–ù–´–•:');
    console.error(error.message);
    if (error.stack) {
      console.error('–°—Ç–µ–∫ –æ—à–∏–±–∫–∏:', error.stack);
    }
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–ª—è –æ—à–∏–±–æ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    if (error.message.includes('ENOENT') || error.message.includes('socket')) {
      console.error('[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞] üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –æ—à–∏–±–∫–∞ —Å Unix socket. –í–æ–∑–º–æ–∂–Ω–æ, —Å–∏—Å—Ç–µ–º–∞ –≤—Å—ë –µ—â–µ –ø—ã—Ç–∞–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–π PostgreSQL.');
      console.error('–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ db-connect-fix.js –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –¥–æ –ª—é–±—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π —Å –ë–î –≤–æ –≤—Å–µ—Ö —Ñ–∞–π–ª–∞—Ö.');
    } else if (error.message.includes('timeout')) {
      console.error('[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞] üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω —Ç–∞–π–º–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è. Neon DB –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω.');
      console.error('–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å Neon DB –∏ —Å–µ—Ç–µ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.');
    } else if (error.message.includes('too many clients')) {
      console.error('[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞] üîç –ü—Ä–µ–≤—ã—à–µ–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –≤ –ø—É–ª–µ.');
      console.error('–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Ç–µ—á–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –∏ –∑–∞–∫—Ä—ã—Ç–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.');
    }
    
  } finally {
    await pool.end();
    console.log('[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞] üèÅ –ü—É–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –∑–∞–∫—Ä—ã—Ç. –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.');
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
testConnection().catch(error => {
  console.error('[–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞] ‚ö†Ô∏è –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –≤ —Å–∫—Ä–∏–ø—Ç–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error);
});