/**
 * –ò–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä —É–ª—É—á—à–µ–Ω–∏–π –¥–ª—è –º–∞—Ä—à—Ä—É—Ç–æ–≤ Express
 * –≠—Ç–æ—Ç –º–æ–¥—É–ª—å –ø—Ä–∏–º–µ–Ω—è–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è CORS –∏ —Å–µ—Å—Å–∏–π –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞
 * 
 * –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –≤ –Ω–∞—á–∞–ª–µ server/routes.ts –ø–µ—Ä–µ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –º–∞—Ä—à—Ä—É—Ç–æ–≤
 */

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏
const session = require('express-session');
const { Pool } = require('pg');
const crypto = require('crypto');

/**
 * –ü—Ä–∏–º–µ–Ω—è–µ—Ç —É–ª—É—á—à–µ–Ω–Ω—ã–π CORS middleware –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é Express
 * @param {Object} app - –≠–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Express
 * @returns {Object} - –≠–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Express —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–Ω—ã–º–∏ —É–ª—É—á—à–µ–Ω–∏—è–º–∏
 */
function applyRoutesImprovements(app) {
  if (!app) {
    throw new Error('[Routes Integrator] –ù–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Express');
  }
  
  console.log('[Routes Integrator] üîß –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —É–ª—É—á—à–µ–Ω–∏–π –¥–ª—è –º–∞—Ä—à—Ä—É—Ç–æ–≤...');
  
  // –ü—Ä–∏–º–µ–Ω—è–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π CORS middleware
  applyCorsImprovements(app);
  
  // –ü—Ä–∏–º–µ–Ω—è–µ–º —É–ª—É—á—à–µ–Ω–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Å–µ—Å—Å–∏–π
  applySessionImprovements(app);
  
  // –î–æ–±–∞–≤–ª—è–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏
  // –≠—Ç–æ –≤–∞–∂–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram Mini App
  // –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –Ω–µ –∑–∞–º–µ–Ω—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –º–∞—Ä—à—Ä—É—Ç, –∞ –¥–æ–ø–æ–ª–Ω—è–µ—Ç –µ–≥–æ
  applyAuthorizationImprovements(app);
  
  console.log('[Routes Integrator] ‚úÖ –£–ª—É—á—à–µ–Ω–∏—è –¥–ª—è –º–∞—Ä—à—Ä—É—Ç–æ–≤ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã');
  
  return app;
}

/**
 * –ü—Ä–∏–º–µ–Ω—è–µ—Ç —É–ª—É—á—à–µ–Ω–Ω—ã–π CORS middleware
 * @param {Object} app - –≠–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Express
 */
function applyCorsImprovements(app) {
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π CORS middleware
  const improvedCorsMiddleware = (req, res, next) => {
    // –ü–æ–ª—É—á–∞–µ–º origin –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
    const origin = req.headers.origin;
    
    // –°–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
    const allowedOrigins = [
      'https://web.telegram.org',
      'https://t.me',
      'https://telegram.org',
      'https://telegram.me'
    ];
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–∑—Ä–µ—à–µ–Ω –ª–∏ origin
    if (origin) {
      // –ï—Å–ª–∏ origin –≤ —Å–ø–∏—Å–∫–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –∏–ª–∏ —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
      if (allowedOrigins.includes(origin) || process.env.NODE_ENV === 'development') {
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π origin –≤–º–µ—Å—Ç–æ * –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ credentials
        res.header('Access-Control-Allow-Origin', origin);
        // –í–∞–∂–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å cookies
        res.header('Access-Control-Allow-Credentials', 'true');
      } else {
        // –í production —Ä–∞–∑—Ä–µ—à–∞–µ–º –ª—é–±–æ–π origin —á–µ—Ä–µ–∑ wildcard
        // –Ω–æ –±–µ–∑ credentials (—Å–æ–≥–ª–∞—Å–Ω–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏)
        res.header('Access-Control-Allow-Origin', '*');
      }
    } else {
      // –î–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ –±–µ–∑ origin (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π)
      res.header('Access-Control-Allow-Origin', '*');
    }
    
    // –û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ CORS
    res.header('Access-Control-Allow-Methods', 'GET, PUT, POST, DELETE, OPTIONS');
    res.header('Access-Control-Allow-Headers', 'Content-Type, Authorization, Telegram-Init-Data, X-Telegram-Init-Data, Telegram-Data, X-Telegram-Data, X-Telegram-Auth, X-Telegram-User-Id, X-Telegram-Start-Param, X-Telegram-Platform, X-Telegram-Data-Source, X-Development-Mode, X-Development-User-Id');
    
    // –î–æ–±–∞–≤–ª—è–µ–º Content-Security-Policy –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤ Telegram
    res.header('Content-Security-Policy', "default-src * 'self' data: blob: 'unsafe-inline' 'unsafe-eval'");
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è
    res.header('Cache-Control', 'no-store, no-cache, must-revalidate, proxy-revalidate');
    res.header('Pragma', 'no-cache');
    res.header('Expires', '0');
    res.header('Surrogate-Control', 'no-store');
    
    // –î–ª—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ OPTIONS –æ—Ç–≤–µ—á–∞–µ–º —Å—Ä–∞–∑—É
    if (req.method === 'OPTIONS') {
      return res.status(204).end();
    }
    
    next();
  };
  
  // –ü—Ä–∏–º–µ–Ω—è–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π CORS middleware –ø–µ—Ä–µ–¥ –¥—Ä—É–≥–∏–º–∏ –º–∞—Ä—à—Ä—É—Ç–∞–º–∏
  app.use(improvedCorsMiddleware);
  
  console.log('[Routes Integrator] ‚úÖ –£–ª—É—á—à–µ–Ω–Ω—ã–π CORS middleware –ø—Ä–∏–º–µ–Ω–µ–Ω');
}

/**
 * –ü—Ä–∏–º–µ–Ω—è–µ—Ç —É–ª—É—á—à–µ–Ω–∏—è –¥–ª—è —Å–µ—Å—Å–∏–π
 * @param {Object} app - –≠–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Express
 */
function applySessionImprovements(app) {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ DATABASE_URL –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è PostgreSQL –∫–∞–∫ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ —Å–µ—Å—Å–∏–π
    if (!process.env.DATABASE_URL) {
      console.warn('[Routes Integrator] ‚ö†Ô∏è DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º MemoryStore –¥–ª—è —Å–µ—Å—Å–∏–π');
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º MemoryStore, –µ—Å–ª–∏ –Ω–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
      const sessionOptions = {
        secret: process.env.SESSION_SECRET || crypto.randomBytes(32).toString('hex'),
        resave: false,
        saveUninitialized: false,
        cookie: {
          secure: process.env.NODE_ENV === 'production',
          httpOnly: true,
          sameSite: 'none', // –î–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram Mini App
          maxAge: 7 * 24 * 60 * 60 * 1000 // 7 –¥–Ω–µ–π
        }
      };
      
      // –í production —Ä–µ–∂–∏–º–µ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –¥–æ–≤–µ—Ä–∏–µ –∫ –ø—Ä–æ–∫—Å–∏
      if (process.env.NODE_ENV === 'production') {
        app.set('trust proxy', 1);
        sessionOptions.cookie.secure = true;
      }
      
      // –ü—Ä–∏–º–µ–Ω—è–µ–º middleware —Å–µ—Å—Å–∏–π
      app.use(session(sessionOptions));
      console.log('[Routes Integrator] ‚úÖ –ü—Ä–∏–º–µ–Ω–µ–Ω middleware —Å–µ—Å—Å–∏–π —Å MemoryStore');
    } else {
      // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–µ—Å—Å–∏–π –≤ PostgreSQL
      const pgSession = require('connect-pg-simple')(session);
      
      // –°–æ–∑–¥–∞–µ–º –ø—É–ª –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –∫ PostgreSQL
      const pool = new Pool({
        connectionString: process.env.DATABASE_URL,
        ssl: {
          rejectUnauthorized: false // –î–ª—è Neon DB
        }
      });
      
      // –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É —Å–µ—Å—Å–∏–π, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
      pool.query(`
        CREATE TABLE IF NOT EXISTS sessions (
          sid VARCHAR NOT NULL PRIMARY KEY,
          sess JSON NOT NULL,
          expire TIMESTAMP(6) NOT NULL
        )
      `).then(() => {
        console.log('[Routes Integrator] ‚úÖ –¢–∞–±–ª–∏—Ü–∞ sessions –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞/—Å–æ–∑–¥–∞–Ω–∞');
        
        // –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –∏—Å—Ç–µ—á–µ–Ω–∏—è
        return pool.query(`
          CREATE INDEX IF NOT EXISTS IDX_sessions_expire ON sessions (expire)
        `);
      }).then(() => {
        console.log('[Routes Integrator] ‚úÖ –ò–Ω–¥–µ–∫—Å –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã sessions –ø—Ä–æ–≤–µ—Ä–µ–Ω/—Å–æ–∑–¥–∞–Ω');
      }).catch(error => {
        console.error('[Routes Integrator] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã sessions:', error.message);
      });
      
      // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Å—Å–∏–∏ —Å —Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º –≤ PostgreSQL
      const sessionOptions = {
        store: new pgSession({
          pool,
          tableName: 'sessions' // –ò–º—è —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–µ—Å—Å–∏–π
        }),
        secret: process.env.SESSION_SECRET || crypto.randomBytes(32).toString('hex'),
        resave: false,
        saveUninitialized: false,
        cookie: {
          secure: process.env.NODE_ENV === 'production',
          httpOnly: true,
          sameSite: 'none', // –î–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram Mini App
          maxAge: 7 * 24 * 60 * 60 * 1000 // 7 –¥–Ω–µ–π
        }
      };
      
      // –í production —Ä–µ–∂–∏–º–µ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –¥–æ–≤–µ—Ä–∏–µ –∫ –ø—Ä–æ–∫—Å–∏
      if (process.env.NODE_ENV === 'production') {
        app.set('trust proxy', 1);
        sessionOptions.cookie.secure = true;
      }
      
      // –ü—Ä–∏–º–µ–Ω—è–µ–º middleware —Å–µ—Å—Å–∏–π
      app.use(session(sessionOptions));
      console.log('[Routes Integrator] ‚úÖ –ü—Ä–∏–º–µ–Ω–µ–Ω middleware —Å–µ—Å—Å–∏–π —Å —Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º –≤ PostgreSQL');
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º middleware –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    app.use((req, res, next) => {
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–µ—Å—Å–∏–∏, –µ—Å–ª–∏ –æ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
      if (!req.session.user) {
        req.session.user = null;
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–µ—Å—Å–∏–µ–π –≤ –æ–±—ä–µ–∫—Ç –∑–∞–ø—Ä–æ—Å–∞
      req.isAuthenticated = function() {
        return !!req.session.user;
      };
      
      req.login = function(user) {
        req.session.user = user;
      };
      
      req.logout = function() {
        req.session.user = null;
      };
      
      // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞–ø—Ä–æ—Å–∞
      next();
    });
    
  } catch (error) {
    console.error('[Routes Integrator] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ —Å–µ—Å—Å–∏–π:', error.message);
  }
}

/**
 * –ü—Ä–∏–º–µ–Ω—è–µ—Ç —É–ª—É—á—à–µ–Ω–∏—è –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Telegram
 * @param {Object} app - –≠–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Express
 */
function applyAuthorizationImprovements(app) {
  // –°–æ–∑–¥–∞–µ–º middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –æ—Ç Telegram
  const validateTelegramInitData = (req, res, next) => {
    try {
      // –ü–æ–ª—É—á–∞–µ–º initData –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
      const initData = req.body.initData || 
                       req.headers['telegram-init-data'] || 
                       req.headers['x-telegram-init-data'];
      
      // –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
      if (!initData) {
        return next();
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞
      if (!process.env.TELEGRAM_BOT_TOKEN) {
        console.warn('[Routes Integrator] ‚ö†Ô∏è TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–¥–ø–∏—Å–∏');
        return next();
      }
      
      // –†–∞–∑–±–∏—Ä–∞–µ–º —Å—Ç—Ä–æ–∫—É initData
      const urlParams = new URLSearchParams(initData);
      const hash = urlParams.get('hash');
      
      if (!hash) {
        console.error('[Routes Integrator] ‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç hash –≤ initData');
        return next();
      }
      
      // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
      const dataCheckArr = [];
      
      // –°–æ–∑–¥–∞–µ–º –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ (–±–µ–∑ hash)
      urlParams.forEach((val, key) => {
        if (key !== 'hash') {
          dataCheckArr.push(`${key}=${val}`);
        }
      });
      
      // –°–æ—Ä—Ç–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤
      dataCheckArr.sort();
      
      // –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–æ–∫—É –¥–∞–Ω–Ω—ã—Ö
      const dataCheckString = dataCheckArr.join('\n');
      
      // –°–æ–∑–¥–∞–µ–º HMAC-SHA-256 –ø–æ–¥–ø–∏—Å—å
      const secretKey = crypto.createHmac('sha256', 'WebAppData').update(process.env.TELEGRAM_BOT_TOKEN).digest();
      const calculatedHash = crypto.createHmac('sha256', secretKey)
        .update(dataCheckString)
        .digest('hex');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å—å
      const isValid = calculatedHash === hash;
      
      if (!isValid) {
        console.error('[Routes Integrator] ‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω–∞—è –ø–æ–¥–ø–∏—Å—å initData');
        console.error(`[Routes Integrator] –í—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π —Ö–µ—à: ${calculatedHash}`);
        console.error(`[Routes Integrator] –ü–æ–ª—É—á–µ–Ω–Ω—ã–π —Ö–µ—à: ${hash}`);
        
        // –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –ø–æ–∑–≤–æ–ª—è–µ–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥–∞–∂–µ —Å –Ω–µ–≤–µ—Ä–Ω–æ–π –ø–æ–¥–ø–∏—Å—å—é
        if (process.env.NODE_ENV === 'development') {
          console.log('[Routes Integrator] –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏: –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–µ–≤–∞–ª–∏–¥–Ω—É—é –ø–æ–¥–ø–∏—Å—å');
          return next();
        }
        
        return res.status(403).json({
          success: false,
          error: '–ù–µ–≤–µ—Ä–Ω–∞—è –ø–æ–¥–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö Telegram'
        });
      }
      
      // –ü–æ–¥–ø–∏—Å—å –≤–µ—Ä–Ω–∞, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∑–∞–ø—Ä–æ—Å–µ
      const userStr = urlParams.get('user');
      
      if (userStr) {
        try {
          const user = JSON.parse(userStr);
          req.telegramUser = user;
          console.log(`[Routes Integrator] ‚úÖ –ü–æ–¥–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö Telegram –≤–µ—Ä–Ω–∞, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user.id}`);
        } catch (error) {
          console.error('[Routes Integrator] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error.message);
        }
      }
      
      next();
    } catch (error) {
      console.error('[Routes Integrator] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∏ Telegram:', error.message);
      next();
    }
  };
  
  // –ü—Ä–∏–º–µ–Ω—è–µ–º middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∏ Telegram –¥–ª—è –≤—Å–µ—Ö API-–∑–∞–ø—Ä–æ—Å–æ–≤
  app.use('/api', validateTelegramInitData);
  
  console.log('[Routes Integrator] ‚úÖ –ü—Ä–∏–º–µ–Ω–µ–Ω—ã —É–ª—É—á—à–µ–Ω–∏—è –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Telegram');
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —É–ª—É—á—à–µ–Ω–∏–π
module.exports = {
  applyRoutesImprovements
};