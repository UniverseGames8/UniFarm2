/**
 * –ü—Ä—è–º–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ Telegram –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ SQL
 * –°–æ–∑–¥–∞–µ—Ç 5 —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –Ω–∞—Å—Ç–æ—è—â–∏–º–∏ telegram_id
 */

import { testConnection } from './server/db-connect-unified.js';

// –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è
const testUsers = [
  {
    telegram_id: 123456789,
    username: 'alice_crypto', 
    first_name: 'Alice',
    last_name: 'Smith'
  },
  {
    telegram_id: 987654321,
    username: 'bob_farming',
    first_name: 'Bob', 
    last_name: 'Johnson'
  },
  {
    telegram_id: 555777999,
    username: 'charlie_uni',
    first_name: 'Charlie',
    last_name: null
  },
  {
    telegram_id: 111222333, 
    username: 'diana_tokens',
    first_name: 'Diana',
    last_name: 'Williams'
  },
  {
    telegram_id: 444666888,
    username: 'eve_blockchain', 
    first_name: 'Eve',
    last_name: 'Brown'
  }
];

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥
 */
function generateRefCode() {
  return `ref_${Math.random().toString(36).substring(2, 10)}`;
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä—è–º–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
 */
async function createTelegramUser(userData) {
  try {
    console.log(`\n[DIRECT] üöÄ –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${userData.username} (ID: ${userData.telegram_id})`);
    
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const db = await testConnection();
    if (!db) {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
    }
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥
    const refCode = generateRefCode();
    
    // SQL –∑–∞–ø—Ä–æ—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const insertQuery = `
      INSERT INTO users (
        telegram_id, 
        username, 
        guest_id, 
        wallet, 
        ton_wallet_address,
        ref_code, 
        parent_ref_code,
        balance_uni, 
        balance_ton,
        created_at
      ) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10)
      RETURNING id, telegram_id, username, ref_code, balance_uni, balance_ton
    `;
    
    const values = [
      userData.telegram_id,
      userData.username,
      null, // guest_id = null –¥–ª—è Telegram –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      null, // wallet = null –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ
      null, // ton_wallet_address = null –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ
      refCode,
      null, // parent_ref_code = null (–±–µ–∑ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞)
      '0', // balance_uni = 0 –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ
      '0', // balance_ton = 0 –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ
      new Date() // created_at
    ];
    
    const result = await db.query(insertQuery, values);
    
    if (result.rows && result.rows.length > 0) {
      const user = result.rows[0];
      console.log(`[DIRECT] ‚úÖ –£–°–ü–ï–®–ù–û —Å–æ–∑–¥–∞–Ω: ID=${user.id}, telegram_id=${user.telegram_id}, ref_code=${user.ref_code}`);
      return {
        success: true,
        user: user,
        telegram_id: userData.telegram_id,
        username: userData.username
      };
    } else {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - –Ω–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö');
    }
    
  } catch (error) {
    console.error(`[DIRECT] ‚ùå –û–®–ò–ë–ö–ê —Å–æ–∑–¥–∞–Ω–∏—è ${userData.username}:`, error.message);
    return {
      success: false,
      error: error.message,
      telegram_id: userData.telegram_id,
      username: userData.username
    };
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ë–î
 */
async function checkCreatedUsers() {
  try {
    console.log('\n[DIRECT] üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    
    const db = await testConnection();
    if (!db) {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å telegram_id
    const query = `
      SELECT id, telegram_id, username, ref_code, balance_uni, balance_ton, created_at
      FROM users 
      WHERE telegram_id IS NOT NULL 
      ORDER BY created_at DESC 
      LIMIT 10
    `;
    
    const result = await db.query(query);
    
    if (result.rows && result.rows.length > 0) {
      console.log(`[DIRECT] üìä –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å telegram_id: ${result.rows.length}`);
      
      result.rows.forEach((user, index) => {
        console.log(`[DIRECT] ${index + 1}. ID=${user.id}, telegram_id=${user.telegram_id}, username=${user.username}, ref_code=${user.ref_code}`);
      });
      
      return result.rows;
    } else {
      console.log('[DIRECT] ‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å telegram_id –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      return [];
    }
    
  } catch (error) {
    console.error('[DIRECT] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error.message);
    return [];
  }
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
 */
async function runDirectRegistration() {
  console.log('üéØ –ù–ê–ß–ò–ù–ê–ï–ú –ü–†–Ø–ú–û–ï –°–û–ó–î–ê–ù–ò–ï TELEGRAM –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô');
  
  const results = [];
  
  // –°–æ–∑–¥–∞–µ–º –∫–∞–∂–¥–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  for (const userData of testUsers) {
    const result = await createTelegramUser(userData);
    results.push(result);
    
    // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏
    await new Promise(resolve => setTimeout(resolve, 500));
  }
  
  // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
  console.log('\nüìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢:');
  const successful = results.filter(r => r.success);
  const failed = results.filter(r => !r.success);
  
  console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ: ${successful.length}`);
  console.log(`‚ùå –û—à–∏–±–æ–∫ —Å–æ–∑–¥–∞–Ω–∏—è: ${failed.length}`);
  
  if (successful.length > 0) {
    console.log('\n‚úÖ –£–°–ü–ï–®–ù–´–ï –°–û–ó–î–ê–ù–ò–Ø:');
    successful.forEach((result, index) => {
      console.log(`${index + 1}. Telegram ID: ${result.telegram_id}, Username: ${result.username}, DB ID: ${result.user?.id}, Ref Code: ${result.user?.ref_code}`);
    });
  }
  
  if (failed.length > 0) {
    console.log('\n‚ùå –ù–ï–£–î–ê–ß–ù–´–ï –°–û–ó–î–ê–ù–ò–Ø:');
    failed.forEach((result, index) => {
      console.log(`${index + 1}. Telegram ID: ${result.telegram_id}, Username: ${result.username}, –û—à–∏–±–∫–∞: ${result.error}`);
    });
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ë–î
  const dbUsers = await checkCreatedUsers();
  
  console.log('\nüéØ –ü–†–Ø–ú–û–ï –°–û–ó–î–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û');
  
  return { results, dbUsers };
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ
runDirectRegistration().catch(console.error);

export { runDirectRegistration };