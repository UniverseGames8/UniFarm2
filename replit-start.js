/**
 * –û—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏ Run –≤ Replit
 */

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –¥–æ—á–µ—Ä–Ω–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
import { spawn } from 'child_process';
import { fileURLToPath } from 'url';
import path from 'path';
import fs from 'fs';

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—É—Å–∫–µ
console.log('üöÄ UniFarm Server - –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É Run –≤ Replit');
console.log('‚è±Ô∏è –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞:', new Date().toISOString());

// –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
const logsDir = path.join(__dirname, 'logs');
if (!fs.existsSync(logsDir)) {
  fs.mkdirSync(logsDir, { recursive: true });
}

// –§–∞–π–ª –¥–ª—è –ª–æ–≥–æ–≤
const logFile = path.join(logsDir, `replit-run-${Date.now()}.log`);
const logStream = fs.createWriteStream(logFile, { flags: 'a' });

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
function log(message) {
  const timestamp = new Date().toISOString();
  const formattedMsg = `[${timestamp}] ${message}`;
  console.log(formattedMsg);
  logStream.write(formattedMsg + '\n');
}

log('–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ —á–µ—Ä–µ–∑ start.cjs...');

// –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—à —Å—Ç–∞–±–∏–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç
const serverProcess = spawn('node', ['start.cjs'], {
  stdio: 'inherit',
  env: {
    ...process.env,
    NODE_ENV: 'production',
  }
});

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞
serverProcess.on('close', (code) => {
  log(`‚ö†Ô∏è –ü—Ä–æ—Ü–µ—Å—Å —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –∫–æ–¥–æ–º ${code}`);
  log('üîÑ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å –∞–∫—Ç–∏–≤–Ω—ã–º...');
});

serverProcess.on('error', (err) => {
  log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞: ${err.message}`);
});

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
process.on('SIGINT', () => {
  log('‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGINT, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º');
});

process.on('SIGTERM', () => {
  log('‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGTERM, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º');
});

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è
process.on('uncaughtException', (err) => {
  log(`‚ùå –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: ${err.message}`);
  log('‚úÖ –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞');
});

// –ò–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –∞–∫—Ç–∏–≤–Ω—ã–º
setInterval(() => {}, 1000);

log('‚úÖ –ó–∞–ø—É—Å–∫–Ω–æ–π —Å–∫—Ä–∏–ø—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ');