/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Neon DB
 */
require('dotenv').config({ path: '.env.neon' });
const fs = require('fs');
const path = require('path');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å —Ü–≤–µ—Ç–∞–º–∏
const colors = {
  reset: '\x1b[0m',
  bright: '\x1b[1m',
  green: '\x1b[32m',
  red: '\x1b[31m',
  yellow: '\x1b[33m',
  blue: '\x1b[34m',
  magenta: '\x1b[35m'
};

function log(message, color = colors.reset) {
  console.log(color + message + colors.reset);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —á—Ç–µ–Ω–∏—è –∏ –∞–Ω–∞–ª–∏–∑–∞ —Ñ–∞–π–ª–∞
function readFile(filePath) {
  try {
    return fs.readFileSync(filePath, 'utf8');
  } catch (error) {
    return `–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: ${error.message}`;
  }
}

function testDBConfiguration() {
  log('='.repeat(60), colors.blue);
  log('üîç –ü–†–û–í–ï–†–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò NEON DB', colors.bright + colors.blue);
  log('='.repeat(60), colors.blue);
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
  log('üìã –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:', colors.blue);
  const hasDbUrl = !!process.env.DATABASE_URL;
  log(`DATABASE_URL: ${hasDbUrl ? '–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ ‚úÖ' : '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ ‚ùå'}`, 
    hasDbUrl ? colors.green : colors.red);
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º dbUrl –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –≤—Å–µ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
  let dbUrl = '';
  let isNeonDb = false;
  let hasSslMode = false;
  let hasPooler = false;
  
  if (hasDbUrl) {
    dbUrl = process.env.DATABASE_URL;
    isNeonDb = dbUrl.includes('neon.tech');
    log(`–¢–∏–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: ${isNeonDb ? 'Neon DB ‚úÖ' : '–î—Ä—É–≥–∞—è ‚ùå'}`, 
      isNeonDb ? colors.green : colors.yellow);
    
    hasSslMode = dbUrl.includes('sslmode=require');
    log(`SSL –Ω–∞—Å—Ç—Ä–æ–π–∫–∞: ${hasSslMode ? '–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ (sslmode=require) ‚úÖ' : '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚ùå'}`, 
      hasSslMode ? colors.green : colors.red);
    
    hasPooler = dbUrl.includes('-pooler');
    log(`Connection Pooler: ${hasPooler ? '–í–∫–ª—é—á–µ–Ω ‚úÖ' : '–í—ã–∫–ª—é—á–µ–Ω ‚ÑπÔ∏è'}`, 
      hasPooler ? colors.green : colors.yellow);
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤ db-selector-new.ts
  log('\nüìù –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ db-selector-new.ts:', colors.blue);
  const selectorContent = readFile('./server/db-selector-new.ts');
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Neon DB
  const forcesNeonDb = selectorContent.includes('// –í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º Neon DB') || 
                       selectorContent.includes('–ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï NEON DB');
  log(`–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Neon DB: ${forcesNeonDb ? '–î–∞ ‚úÖ' : '–ù–µ—Ç ‚ùå'}`, 
    forcesNeonDb ? colors.green : colors.red);
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ö–æ–¥–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ USE_LOCAL_DB_ONLY
  const bypassesLocalDbCheck = !selectorContent.includes('if (enforceLocalDbOnly && provider !== \'replit\')');
  log(`–û–±—Ö–æ–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏ USE_LOCAL_DB_ONLY: ${bypassesLocalDbCheck ? '–î–∞ ‚úÖ' : '–ù–µ—Ç ‚ùå'}`, 
    bypassesLocalDbCheck ? colors.green : colors.red);
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤ db.ts
  log('\nüìù –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ db.ts:', colors.blue);
  const dbContent = readFile('./server/db.ts');
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SSL –¥–ª—è Neon DB
  const hasSslConfig = dbContent.includes('ssl: {') && 
                       dbContent.includes('rejectUnauthorized: false');
  log(`–ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL –¥–ª—è Neon DB: ${hasSslConfig ? '–î–∞ ‚úÖ' : '–ù–µ—Ç ‚ùå'}`, 
    hasSslConfig ? colors.green : colors.red);
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ isReplit
  const ignoresReplitCheck = !dbContent.includes('if (isReplit)') || 
                             dbContent.includes('// –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É isReplit');
  log(`–ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ isReplit: ${ignoresReplitCheck ? '–î–∞ ‚úÖ' : '–ù–µ—Ç ‚ùå'}`, 
    ignoresReplitCheck ? colors.green : colors.red);
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ drizzle.config.ts
  log('\nüìù –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ drizzle.config.ts:', colors.blue);
  const drizzleContent = readFile('./drizzle.config.ts');
  
  const drizzleUsesEnvVar = drizzleContent.includes('process.env.DATABASE_URL');
  log(`–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π DATABASE_URL: ${drizzleUsesEnvVar ? '–î–∞ ‚úÖ' : '–ù–µ—Ç ‚ùå'}`, 
    drizzleUsesEnvVar ? colors.green : colors.red);
  
  // –°—Ç–∞—Ç—É—Å –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
  log('\nüìä –ò–¢–û–ì–û–í–´–ô –°–¢–ê–¢–£–°:', colors.blue);
  
  const envStatus = hasDbUrl && isNeonDb;
  const codeStatus = forcesNeonDb && hasSslConfig && ignoresReplitCheck;
  
  log(`–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è: ${envStatus ? '–ì–æ—Ç–æ–≤–∞ ‚úÖ' : '–¢—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ‚ùå'}`, 
    envStatus ? colors.green : colors.red);
  
  log(`–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ–¥–∞: ${codeStatus ? '–ì–æ—Ç–æ–≤–∞ ‚úÖ' : '–¢—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ‚ùå'}`, 
    codeStatus ? colors.green : colors.red);
  
  if (envStatus && codeStatus) {
    log('\nüéâ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ NEON DB!', colors.green);
    log('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –∑–∞–ø—É—Å—Ç–∏–≤ –µ–≥–æ –≤ —Ä–µ–∂–∏–º–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Neon DB.', colors.green);
  } else {
    log('\n‚ö†Ô∏è –¢–†–ï–ë–£–ï–¢–°–Ø –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê', colors.yellow);
    log('–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –ø—É–Ω–∫—Ç—ã, –æ—Ç–º–µ—á–µ–Ω–Ω—ã–µ ‚ùå, –∏ –∏—Å–ø—Ä–∞–≤—å—Ç–µ –∏—Ö.', colors.yellow);
  }
}

testDBConfiguration();