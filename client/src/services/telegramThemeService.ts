/**
 * –≠–¢–ê–ü 1: –°–µ—Ä–≤–∏—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–º–æ–π Telegram WebApp
 * 
 * –≠—Ç–æ—Ç —Å–µ—Ä–≤–∏—Å –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞:
 * 1. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å Telegram.WebApp.themeParams
 * 2. –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
 * 3. –û–±—Ä–∞–±–æ—Ç–∫—É —Å–æ–±—ã—Ç–∏–π —Å–º–µ–Ω—ã —Ç–µ–º—ã
 * 4. –ü–æ–¥–¥–µ—Ä–∂–∫—É —Å–≤–µ—Ç–ª–æ–π –∏ —Ç–µ–º–Ω–æ–π —Ç–µ–º—ã
 */

// –≠–¢–ê–ü 1: –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ç–µ–º—ã Telegram
interface TelegramThemeParams {
  bg_color?: string;
  text_color?: string;
  hint_color?: string;
  link_color?: string;
  button_color?: string;
  button_text_color?: string;
  secondary_bg_color?: string;
}

// –≠–¢–ê–ü 1: –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–µ–º—ã
interface ThemeState {
  isDark: boolean;
  colorScheme: 'light' | 'dark';
  isInitialized: boolean;
  lastUpdate: number;
}

// –≠–¢–ê–ü 1: –ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–µ–º—ã
let themeState: ThemeState = {
  isDark: false,
  colorScheme: 'light',
  isInitialized: false,
  lastUpdate: 0
};

/**
 * –≠–¢–ê–ü 1: –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Ü–≤–µ—Ç Telegram –≤ HSL —Ñ–æ—Ä–º–∞—Ç –¥–ª—è Tailwind
 * @param color - –¶–≤–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ #RRGGBB
 * @returns HSL —Å—Ç—Ä–æ–∫–∞ –±–µ–∑ 'hsl()' –æ–±–µ—Ä—Ç–∫–∏
 */
function convertToHSL(color: string): string {
  // –£–±–∏—Ä–∞–µ–º # –µ—Å–ª–∏ –µ—Å—Ç—å
  const hex = color.replace('#', '');
  
  // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ RGB
  const r = parseInt(hex.substr(0, 2), 16) / 255;
  const g = parseInt(hex.substr(2, 2), 16) / 255;
  const b = parseInt(hex.substr(4, 2), 16) / 255;
  
  // –ù–∞—Ö–æ–¥–∏–º min/max –¥–ª—è HSL —Ä–∞—Å—á–µ—Ç–∞
  const max = Math.max(r, g, b);
  const min = Math.min(r, g, b);
  let h: number, s: number, l: number;
  
  l = (max + min) / 2;
  
  if (max === min) {
    h = s = 0; // achromatic
  } else {
    const d = max - min;
    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
    
    switch (max) {
      case r: h = (g - b) / d + (g < b ? 6 : 0); break;
      case g: h = (b - r) / d + 2; break;
      case b: h = (r - g) / d + 4; break;
      default: h = 0;
    }
    
    h /= 6;
  }
  
  // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ –ø—Ä–æ—Ü–µ–Ω—Ç—ã/–≥—Ä–∞–¥—É—Å—ã
  h = Math.round(h * 360);
  s = Math.round(s * 100);
  l = Math.round(l * 100);
  
  return `${h} ${s}% ${l}%`;
}

/**
 * –≠–¢–ê–ü 1: –ü—Ä–∏–º–µ–Ω—è–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç–µ–º—ã Telegram –∫ CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º
 * @param themeParams - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç–µ–º—ã –æ—Ç Telegram
 */
function applyTelegramTheme(themeParams: TelegramThemeParams): void {
  console.log('[TELEGRAM THEME] üé® –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ç–µ–º—ã:', themeParams);
  
  const root = document.documentElement;
  
  try {
    // –≠–¢–ê–ü 1: –û—Å–Ω–æ–≤–Ω—ã–µ —Ü–≤–µ—Ç–∞
    if (themeParams.bg_color) {
      const bgHSL = convertToHSL(themeParams.bg_color);
      root.style.setProperty('--background', bgHSL);
      root.style.setProperty('--card', bgHSL);
      console.log('[TELEGRAM THEME] ‚úÖ –§–æ–Ω —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', bgHSL);
    }
    
    if (themeParams.text_color) {
      const textHSL = convertToHSL(themeParams.text_color);
      root.style.setProperty('--foreground', textHSL);
      root.style.setProperty('--card-foreground', textHSL);
      console.log('[TELEGRAM THEME] ‚úÖ –¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', textHSL);
    }
    
    if (themeParams.secondary_bg_color) {
      const secondaryHSL = convertToHSL(themeParams.secondary_bg_color);
      root.style.setProperty('--muted', secondaryHSL);
      root.style.setProperty('--popover', secondaryHSL);
      console.log('[TELEGRAM THEME] ‚úÖ –í—Ç–æ—Ä–∏—á–Ω—ã–π —Ñ–æ–Ω —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', secondaryHSL);
    }
    
    if (themeParams.button_color) {
      const buttonHSL = convertToHSL(themeParams.button_color);
      root.style.setProperty('--primary', buttonHSL);
      console.log('[TELEGRAM THEME] ‚úÖ –¶–≤–µ—Ç –∫–Ω–æ–ø–æ–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', buttonHSL);
    }
    
    if (themeParams.button_text_color) {
      const buttonTextHSL = convertToHSL(themeParams.button_text_color);
      root.style.setProperty('--primary-foreground', buttonTextHSL);
      console.log('[TELEGRAM THEME] ‚úÖ –¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–æ–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', buttonTextHSL);
    }
    
    if (themeParams.link_color) {
      const linkHSL = convertToHSL(themeParams.link_color);
      root.style.setProperty('--accent', linkHSL);
      console.log('[TELEGRAM THEME] ‚úÖ –¶–≤–µ—Ç —Å—Å—ã–ª–æ–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', linkHSL);
    }
    
    if (themeParams.hint_color) {
      const hintHSL = convertToHSL(themeParams.hint_color);
      root.style.setProperty('--muted-foreground', hintHSL);
      console.log('[TELEGRAM THEME] ‚úÖ –¶–≤–µ—Ç –ø–æ–¥—Å–∫–∞–∑–æ–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', hintHSL);
    }
    
    console.log('[TELEGRAM THEME] üéâ –¢–µ–º–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞');
    
  } catch (error) {
    console.error('[TELEGRAM THEME] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ —Ç–µ–º—ã:', error);
  }
}

/**
 * –≠–¢–ê–ü 1: –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø —Ç–µ–º—ã (—Å–≤–µ—Ç–ª–∞—è/—Ç–µ–º–Ω–∞—è) –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ñ–æ–Ω–∞
 * @param bgColor - –¶–≤–µ—Ç —Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ #RRGGBB
 * @returns true –µ—Å–ª–∏ —Ç–µ–º–Ω–∞—è —Ç–µ–º–∞
 */
function isDarkTheme(bgColor: string): boolean {
  const hex = bgColor.replace('#', '');
  const r = parseInt(hex.substr(0, 2), 16);
  const g = parseInt(hex.substr(2, 2), 16);
  const b = parseInt(hex.substr(4, 2), 16);
  
  // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —è—Ä–∫–æ—Å—Ç—å –ø–æ —Ñ–æ—Ä–º—É–ª–µ luminance
  const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;
  
  return luminance < 0.5;
}

/**
 * –≠–¢–ê–ü 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ç–µ–º—É –∏–∑ Telegram WebApp
 */
export function initializeTelegramTheme(): boolean {
  console.log('[TELEGRAM THEME] üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–º—ã...');
  
  try {
    // –≠–¢–ê–ü 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Telegram WebApp
    if (!window.Telegram?.WebApp) {
      console.warn('[TELEGRAM THEME] ‚ö†Ô∏è Telegram WebApp –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
      return false;
    }
    
    const webApp = window.Telegram.WebApp;
    
    // –≠–¢–ê–ü 1: –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç–µ–º—ã
    const themeParams = webApp.themeParams;
    const colorScheme = webApp.colorScheme;
    
    console.log('[TELEGRAM THEME] üìä –î–∞–Ω–Ω—ã–µ —Ç–µ–º—ã:', {
      themeParams,
      colorScheme,
      hasThemeParams: !!themeParams
    });
    
    // –≠–¢–ê–ü 1: –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ç–µ–º—ã
    let isDark = false;
    if (colorScheme) {
      isDark = colorScheme === 'dark';
    } else if (themeParams?.bg_color) {
      isDark = isDarkTheme(themeParams.bg_color);
    }
    
    // –≠–¢–ê–ü 1: –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    themeState = {
      isDark,
      colorScheme: isDark ? 'dark' : 'light',
      isInitialized: true,
      lastUpdate: Date.now()
    };
    
    // –≠–¢–ê–ü 1: –õ–æ–≥–∏—Ä—É–µ–º —Ç–∏–ø —Ç–µ–º—ã
    console.log(`[THEME INIT: ${isDark ? 'DARK' : 'LIGHT'}]`);
    
    // –≠–¢–ê–ü 1: –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É –µ—Å–ª–∏ –µ—Å—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    if (themeParams && Object.keys(themeParams).length > 0) {
      applyTelegramTheme(themeParams);
    } else {
      console.warn('[TELEGRAM THEME] ‚ö†Ô∏è themeParams –ø—É—Å—Ç—ã–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–º—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');
    }
    
    return true;
    
  } catch (error) {
    console.error('[TELEGRAM THEME] ‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
    return false;
  }
}

/**
 * –≠–¢–ê–ü 1: –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã
 */
function handleThemeChanged(): void {
  console.log('[TELEGRAM THEME] üîÑ –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º—ã');
  
  // –≠–¢–ê–ü 1: –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ–º—É
  const success = initializeTelegramTheme();
  
  if (success) {
    console.log('[TELEGRAM THEME] ‚úÖ –¢–µ–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è');
  } else {
    console.error('[TELEGRAM THEME] ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Ç–µ–º—É');
  }
}

/**
 * –≠–¢–ê–ü 1: –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è viewport
 */
function handleViewportChanged(): void {
  console.log('[TELEGRAM THEME] üìê –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ viewport');
  
  try {
    const webApp = window.Telegram?.WebApp;
    if (webApp) {
      console.log('[TELEGRAM THEME] üìä –ù–æ–≤—ã–µ —Ä–∞–∑–º–µ—Ä—ã viewport:', {
        viewportHeight: webApp.viewportHeight,
        viewportStableHeight: webApp.viewportStableHeight,
        isExpanded: (webApp as any).isExpanded
      });
    }
  } catch (error) {
    console.error('[TELEGRAM THEME] ‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ viewport:', error);
  }
}

/**
 * –≠–¢–ê–ü 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π Telegram WebApp
 */
export function initializeTelegramEvents(): boolean {
  console.log('[TELEGRAM THEME] üéß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π...');
  
  try {
    const webApp = window.Telegram?.WebApp;
    
    if (!webApp || !webApp.onEvent) {
      console.warn('[TELEGRAM THEME] ‚ö†Ô∏è onEvent –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
      return false;
    }
    
    // –≠–¢–ê–ü 1: –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏—è
    webApp.onEvent('themeChanged', handleThemeChanged);
    console.log('[TELEGRAM THEME] ‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ themeChanged');
    
    webApp.onEvent('viewportChanged', handleViewportChanged);
    console.log('[TELEGRAM THEME] ‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ viewportChanged');
    
    webApp.onEvent('mainButtonClicked', () => {
      console.log('[TELEGRAM THEME] üîò MainButton clicked');
    });
    
    // –§–ò–ù–ê–õ–¨–ù–û–ï –ó–ê–í–ï–†–®–ï–ù–ò–ï: –û–±—Ä–∞–±–æ—Ç–∫–∞ settingsButtonPressed
    webApp.onEvent('settingsButtonPressed', () => {
      console.log('[TG SETTINGS BUTTON PRESSED] ‚öôÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É –Ω–∞—Å—Ç—Ä–æ–µ–∫');
      try {
        // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –æ—Ç–∫—Ä—ã—Ç–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        console.log('[TG SETTINGS] –û—Ç–∫—Ä—ã—Ç–∏–µ —Ä–∞–∑–¥–µ–ª–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫...');
      } catch (error) {
        console.error('[TG ERROR] settingsButtonPressed ‚Äî Failed to handle settings:', error);
      }
    });
    
    return true;
    
  } catch (error) {
    console.error('[TELEGRAM THEME] ‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–æ–±—ã—Ç–∏–π:', error);
    return false;
  }
}

/**
 * –≠–¢–ê–ü 1: –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–µ–º—ã
 */
export function getThemeState(): ThemeState {
  return { ...themeState };
}

/**
 * –≠–¢–ê–ü 1: –ü–æ–ª–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–º—ã –∏ —Å–æ–±—ã—Ç–∏–π
 */
export function initializeTelegramThemeSystem(): boolean {
  console.log('[TELEGRAM THEME] üåü –ü–æ–ª–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —Ç–µ–º—ã...');
  
  const themeSuccess = initializeTelegramTheme();
  const eventsSuccess = initializeTelegramEvents();
  
  const overallSuccess = themeSuccess || eventsSuccess;
  
  console.log('[TELEGRAM THEME] üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', {
    theme: themeSuccess,
    events: eventsSuccess,
    overall: overallSuccess
  });
  
  return overallSuccess;
}