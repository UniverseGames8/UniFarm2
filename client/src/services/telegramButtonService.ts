/**
 * –≠–¢–ê–ü 2: –°–µ—Ä–≤–∏—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∞–º–∏ Telegram WebApp
 * 
 * –≠—Ç–æ—Ç —Å–µ—Ä–≤–∏—Å –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞:
 * 1. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ MainButton (–ø–æ–∫–∞–∑, —Å–∫—Ä—ã—Ç–∏–µ, —Ç–µ–∫—Å—Ç, –∫–ª–∏–∫–∏)
 * 2. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ BackButton (–ø–æ–∫–∞–∑, —Å–∫—Ä—ã—Ç–∏–µ, –Ω–∞–≤–∏–≥–∞—Ü–∏—è)
 * 3. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å —Ä–æ—É—Ç–∏–Ω–≥–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * 4. –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∞–º–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 */

// –≠–¢–ê–ü 2: –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–æ–∫
interface ButtonState {
  mainButton: {
    isVisible: boolean;
    text: string;
    isEnabled: boolean;
    lastAction: string | null;
  };
  backButton: {
    isVisible: boolean;
    lastAction: string | null;
  };
  isInitialized: boolean;
  lastUpdate: number;
}

// –≠–¢–ê–ü 2: –¢–∏–ø—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–Ω–æ–ø–æ–∫
type ButtonClickHandler = () => void;
type NavigationHandler = (route: string) => void;

// –≠–¢–ê–ü 2: –ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
let buttonState: ButtonState = {
  mainButton: {
    isVisible: false,
    text: '',
    isEnabled: true,
    lastAction: null
  },
  backButton: {
    isVisible: false,
    lastAction: null
  },
  isInitialized: false,
  lastUpdate: 0
};

// –≠–¢–ê–ü 2: –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
let mainButtonHandler: ButtonClickHandler | null = null;
let backButtonHandler: ButtonClickHandler | null = null;
let navigationHandler: NavigationHandler | null = null;

/**
 * –≠–¢–ê–ü 2: –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Telegram WebApp API
 * @returns true –µ—Å–ª–∏ API –¥–æ—Å—Ç—É–ø–Ω–æ
 */
function isTelegramWebAppAvailable(): boolean {
  try {
    return !!(window.Telegram?.WebApp?.MainButton && window.Telegram?.WebApp?.BackButton);
  } catch (error) {
    console.warn('[TELEGRAM BUTTONS] ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ API:', error);
    return false;
  }
}

/**
 * –≠–¢–ê–ü 2: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É –∫–Ω–æ–ø–æ–∫ Telegram WebApp
 * @param navHandler - –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å —Ä–æ—É—Ç–∏–Ω–≥–æ–º
 * @returns true –µ—Å–ª–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞
 */
export function initializeTelegramButtons(navHandler?: NavigationHandler): boolean {
  console.log('[TELEGRAM BUTTONS] üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∫–Ω–æ–ø–æ–∫...');
  
  try {
    if (!isTelegramWebAppAvailable()) {
      console.warn('[TELEGRAM BUTTONS] ‚ö†Ô∏è Telegram WebApp API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
      return false;
    }
    
    // –≠–¢–ê–ü 2: –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    if (navHandler) {
      navigationHandler = navHandler;
      console.log('[TELEGRAM BUTTONS] ‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    }
    
    // –≠–¢–ê–ü 2: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º MainButton
    const mainButton = window.Telegram!.WebApp!.MainButton!;
    
    // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    mainButton.hide();
    console.log('[MAIN BUTTON INIT] üîò MainButton –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    
    // –≠–¢–ê–ü 2: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º BackButton
    const backButton = window.Telegram!.WebApp!.BackButton!;
    
    // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    backButton.hide();
    console.log('[BACK BUTTON INIT] ‚¨ÖÔ∏è BackButton –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    
    // –≠–¢–ê–ü 2: –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    buttonState = {
      mainButton: {
        isVisible: false,
        text: '',
        isEnabled: true,
        lastAction: 'initialized'
      },
      backButton: {
        isVisible: false,
        lastAction: 'initialized'
      },
      isInitialized: true,
      lastUpdate: Date.now()
    };
    
    console.log('[TELEGRAM BUTTONS] üéâ –°–∏—Å—Ç–µ–º–∞ –∫–Ω–æ–ø–æ–∫ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    return true;
    
  } catch (error) {
    console.error('[TELEGRAM BUTTONS] ‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
    return false;
  }
}

/**
 * –≠–¢–ê–ü 2: –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç MainButton —Å –∑–∞–¥–∞–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º –∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–º
 * @param text - –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
 * @param clickHandler - –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
 * @param enabled - –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∫–Ω–æ–ø–∫–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é true)
 */
export function showMainButton(
  text: string, 
  clickHandler: ButtonClickHandler, 
  enabled: boolean = true
): boolean {
  console.log(`[TELEGRAM BUTTONS] üîò –ü–æ–∫–∞–∑ MainButton: "${text}"`);
  
  try {
    if (!buttonState.isInitialized || !isTelegramWebAppAvailable()) {
      console.warn('[TELEGRAM BUTTONS] ‚ö†Ô∏è –°–∏—Å—Ç–µ–º–∞ –∫–Ω–æ–ø–æ–∫ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
      return false;
    }
    
    const mainButton = window.Telegram!.WebApp!.MainButton!;
    
    // –≠–¢–ê–ü 2: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç
    mainButton.setText(text);
    
    // –≠–¢–ê–ü 2: –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –µ—Å–ª–∏ –µ—Å—Ç—å
    if (mainButtonHandler) {
      mainButton.onClick(() => {}); // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    }
    
    // –≠–¢–ê–ü 2: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    mainButtonHandler = () => {
      console.log(`[MAIN BUTTON CLICKED: ${text}] üéØ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è...`);
      buttonState.mainButton.lastAction = `clicked_${text.replace(/\s+/g, '_').toLowerCase()}`;
      buttonState.lastUpdate = Date.now();
      
      try {
        clickHandler();
        console.log(`[MAIN BUTTON CLICKED: ${text}] ‚úÖ –î–µ–π—Å—Ç–≤–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ`);
      } catch (error) {
        console.error(`[MAIN BUTTON CLICKED: ${text}] ‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:`, error);
      }
    };
    
    mainButton.onClick(mainButtonHandler);
    
    // –≠–¢–ê–ü 2: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
    mainButton.show();
    
    // –≠–¢–ê–ü 2: –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    buttonState.mainButton = {
      isVisible: true,
      text,
      isEnabled: enabled,
      lastAction: `shown_${text.replace(/\s+/g, '_').toLowerCase()}`
    };
    buttonState.lastUpdate = Date.now();
    
    console.log(`[MAIN BUTTON INIT] ‚úÖ MainButton "${text}" –∞–∫—Ç–∏–≤–Ω–∞`);
    return true;
    
  } catch (error) {
    console.error('[TELEGRAM BUTTONS] ‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ MainButton:', error);
    return false;
  }
}

/**
 * –≠–¢–ê–ü 2: –°–∫—Ä—ã–≤–∞–µ—Ç MainButton
 */
export function hideMainButton(): boolean {
  console.log('[TELEGRAM BUTTONS] üîò –°–∫—Ä—ã—Ç–∏–µ MainButton...');
  
  try {
    if (!buttonState.isInitialized || !isTelegramWebAppAvailable()) {
      console.warn('[TELEGRAM BUTTONS] ‚ö†Ô∏è –°–∏—Å—Ç–µ–º–∞ –∫–Ω–æ–ø–æ–∫ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
      return false;
    }
    
    const mainButton = window.Telegram!.WebApp!.MainButton!;
    mainButton.hide();
    
    // –≠–¢–ê–ü 2: –û—á–∏—â–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    mainButtonHandler = null;
    
    // –≠–¢–ê–ü 2: –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    buttonState.mainButton = {
      isVisible: false,
      text: '',
      isEnabled: true,
      lastAction: 'hidden'
    };
    buttonState.lastUpdate = Date.now();
    
    console.log('[MAIN BUTTON INIT] ‚úÖ MainButton —Å–∫—Ä—ã—Ç–∞');
    return true;
    
  } catch (error) {
    console.error('[TELEGRAM BUTTONS] ‚ùå –û—à–∏–±–∫–∞ —Å–∫—Ä—ã—Ç–∏—è MainButton:', error);
    return false;
  }
}

/**
 * –≠–¢–ê–ü 2: –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç BackButton —Å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–º –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
 * @param targetRoute - –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
 * @param customHandler - –ö–∞—Å—Ç–æ–º–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
 */
export function showBackButton(targetRoute?: string, customHandler?: ButtonClickHandler): boolean {
  console.log('[TELEGRAM BUTTONS] ‚¨ÖÔ∏è –ü–æ–∫–∞–∑ BackButton...');
  
  try {
    if (!buttonState.isInitialized || !isTelegramWebAppAvailable()) {
      console.warn('[TELEGRAM BUTTONS] ‚ö†Ô∏è –°–∏—Å—Ç–µ–º–∞ –∫–Ω–æ–ø–æ–∫ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
      return false;
    }
    
    const backButton = window.Telegram!.WebApp!.BackButton!;
    
    // –≠–¢–ê–ü 2: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    backButtonHandler = () => {
      const route = targetRoute || '/';
      console.log(`[BACK BUTTON CLICKED ‚Üí Navigated to ${route}] üè† –ù–∞–≤–∏–≥–∞—Ü–∏—è...`);
      
      buttonState.backButton.lastAction = `clicked_to_${route.replace('/', '_')}`;
      buttonState.lastUpdate = Date.now();
      
      try {
        if (customHandler) {
          customHandler();
        } else if (navigationHandler && targetRoute) {
          navigationHandler(targetRoute);
        } else {
          // –≠–¢–ê–ü 2: Fallback - –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
          if (typeof window !== 'undefined' && window.history) {
            window.history.back();
          }
        }
        console.log(`[BACK BUTTON CLICKED ‚Üí Navigated to ${route}] ‚úÖ –ù–∞–≤–∏–≥–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞`);
      } catch (error) {
        console.error(`[BACK BUTTON CLICKED ‚Üí Navigated to ${route}] ‚ùå –û—à–∏–±–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:`, error);
      }
    };
    
    // [FIX: BACKBUTTON ISSUE #3] –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–æ–±—ã—Ç–∏–π
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –µ—Å–ª–∏ –µ—Å—Ç—å
    if (window.Telegram?.WebApp?.BackButton?.offClick) {
      window.Telegram.WebApp.BackButton.offClick(backButtonHandler);
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    backButton.onClick(backButtonHandler);
    
    // –≠–¢–ê–ü 2: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
    backButton.show();
    
    // –≠–¢–ê–ü 2: –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    buttonState.backButton = {
      isVisible: true,
      lastAction: `shown_target_${(targetRoute || 'back').replace('/', '_')}`
    };
    buttonState.lastUpdate = Date.now();
    
    console.log('[BACK BUTTON SHOWN] ‚úÖ BackButton –∞–∫—Ç–∏–≤–Ω–∞');
    return true;
    
  } catch (error) {
    console.error('[TELEGRAM BUTTONS] ‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ BackButton:', error);
    return false;
  }
}

/**
 * –≠–¢–ê–ü 2: –°–∫—Ä—ã–≤–∞–µ—Ç BackButton
 */
export function hideBackButton(): boolean {
  console.log('[TELEGRAM BUTTONS] ‚¨ÖÔ∏è –°–∫—Ä—ã—Ç–∏–µ BackButton...');
  
  try {
    if (!buttonState.isInitialized || !isTelegramWebAppAvailable()) {
      console.warn('[TELEGRAM BUTTONS] ‚ö†Ô∏è –°–∏—Å—Ç–µ–º–∞ –∫–Ω–æ–ø–æ–∫ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
      return false;
    }
    
    const backButton = window.Telegram!.WebApp!.BackButton!;
    backButton.hide();
    
    // –≠–¢–ê–ü 2: –û—á–∏—â–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    backButtonHandler = null;
    
    // –≠–¢–ê–ü 2: –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    buttonState.backButton = {
      isVisible: false,
      lastAction: 'hidden'
    };
    buttonState.lastUpdate = Date.now();
    
    console.log('[BACK BUTTON SHOWN] ‚úÖ BackButton —Å–∫—Ä—ã—Ç–∞');
    return true;
    
  } catch (error) {
    console.error('[TELEGRAM BUTTONS] ‚ùå –û—à–∏–±–∫–∞ —Å–∫—Ä—ã—Ç–∏—è BackButton:', error);
    return false;
  }
}

/**
 * –≠–¢–ê–ü 2: –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
 */
export function getButtonState(): ButtonState {
  return { ...buttonState };
}

/**
 * –≠–¢–ê–ü 2: –ü—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
 */
export const ButtonConfigs = {
  // –≠–¢–ê–ü 2: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ñ–∞—Ä–º–∏–Ω–≥–∞ (–ö–ù–û–ü–ö–ê –£–î–ê–õ–ï–ù–ê)
  farming: {
    // showStartFarming - –£–î–ê–õ–ï–ù–ê –ü–û –¢–†–ï–ë–û–í–ê–ù–ò–Æ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
    showHarvestFarming: () => showMainButton(
      "–°–æ–±—Ä–∞—Ç—å —É—Ä–æ–∂–∞–π", 
      () => console.log('[FARMING] üåæ –£—Ä–æ–∂–∞–π —Å–æ–±—Ä–∞–Ω!'),
      true
    ),
    showBackToHome: () => showBackButton('/')
  },
  
  // –≠–¢–ê–ü 2: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –±—É—Å—Ç–æ–≤
  boost: {
    showOpenBoost: () => showMainButton(
      "–û—Ç–∫—Ä—ã—Ç—å Boost", 
      () => console.log('[BOOST] üöÄ Boost –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!'),
      true
    ),
    showBackToHome: () => showBackButton('/')
  },
  
  // –≠–¢–ê–ü 2: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  home: {
    hideAllButtons: () => {
      hideMainButton();
      hideBackButton();
    }
  }
};

/**
 * –≠–¢–ê–ü 2: –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–Ω–æ–ø–æ–∫ –ø–æ –º–∞—Ä—à—Ä—É—Ç—É
 * @param currentRoute - –¢–µ–∫—É—â–∏–π –º–∞—Ä—à—Ä—É—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */
export function autoConfigureButtonsForRoute(currentRoute: string): void {
  console.log(`[TELEGRAM BUTTONS] üéØ –ê–≤—Ç–æ–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –º–∞—Ä—à—Ä—É—Ç–∞: ${currentRoute}`);
  
  try {
    // –≠–¢–ê–ü 2: –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏ —Å–Ω–∞—á–∞–ª–∞
    hideMainButton();
    hideBackButton();
    
    // –≠–¢–ê–ü 2: –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –º–∞—Ä—à—Ä—É—Ç–∞
    switch (currentRoute) {
      case '/farming':
        // –ö–ù–û–ü–ö–ê "–ù–ê–ß–ê–¢–¨ –§–ê–†–ú–ò–ù–ì" –ü–û–õ–ù–û–°–¢–¨–Æ –£–î–ê–õ–ï–ù–ê - –ù–ï –ü–û–ö–ê–ó–´–í–ê–ï–ú –ù–ò–ö–ê–ö–ò–• –ö–ù–û–ü–û–ö
        console.log('[TELEGRAM BUTTONS] üå± –ö–Ω–æ–ø–∫–∏ —Å–∫—Ä—ã—Ç—ã –¥–ª—è —Ñ–∞—Ä–º–∏–Ω–≥–∞ (–ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é)');
        break;
        
      case '/boost':
        ButtonConfigs.boost.showOpenBoost();
        ButtonConfigs.boost.showBackToHome();
        console.log('[TELEGRAM BUTTONS] üöÄ –ö–Ω–æ–ø–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –¥–ª—è –±—É—Å—Ç–∞');
        break;
        
      case '/':
      case '/home':
        ButtonConfigs.home.hideAllButtons();
        console.log('[TELEGRAM BUTTONS] üè† –ö–Ω–æ–ø–∫–∏ —Å–∫—Ä—ã—Ç—ã –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã');
        break;
        
      default:
        // –≠–¢–ê–ü 2: –î–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ BackButton
        showBackButton('/');
        console.log('[TELEGRAM BUTTONS] ‚ùì –ö–Ω–æ–ø–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –¥–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞');
    }
    
  } catch (error) {
    console.error('[TELEGRAM BUTTONS] ‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:', error);
  }
}