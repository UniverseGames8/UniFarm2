/**
 * –≠–¢–ê–ü 3: –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è –≤—Å–µ—Ö —É–ª—É—á—à–µ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π Telegram WebApp
 * 
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * 1. CloudStorage API - —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ/–∑–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
 * 2. SendData API - –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –±–æ—Ç
 * 3. –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
 */

import React, { useState, useEffect } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { TelegramAdvanced } from '../services/telegramAdvancedService';
import TelegramCloseButton from '../components/telegram/TelegramCloseButton';
import ForceRefreshButton from '../components/telegram/ForceRefreshButton';

const TelegramAdvancedDemo: React.FC = () => {
  // –≠–¢–ê–ü 3: –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ CloudStorage
  const [userSettings, setUserSettings] = useState({
    language: 'ru',
    theme: 'auto',
    notifications: true,
    currency: 'UNI'
  });
  
  // –≠–¢–ê–ü 3: –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ SendData
  const [sendDataDemo, setSendDataDemo] = useState({
    selectedBoost: '',
    farmingAmount: 100,
    lastAction: ''
  });
  
  // –≠–¢–ê–ü 3: –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤
  const [serviceStatus, setServiceStatus] = useState<any>(null);
  const [lastOperation, setLastOperation] = useState<string>('');

  // –≠–¢–ê–ü 3: –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  useEffect(() => {
    loadInitialData();
  }, []);

  const loadInitialData = async () => {
    try {
      console.log('[ADVANCED DEMO] üìä –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
      const settings = await TelegramAdvanced.loadSettings();
      if (settings) {
        setUserSettings({
          language: settings.language || 'ru',
          theme: settings.theme || 'auto',
          notifications: settings.farmingNotifications !== false,
          currency: settings.preferredCurrency || 'UNI'
        });
      }
      
      // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
      const status = TelegramAdvanced.getStatus();
      setServiceStatus(status);
      
      setLastOperation('–î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
    } catch (error) {
      console.error('[ADVANCED DEMO] ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', error);
      setLastOperation('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö');
    }
  };

  // –≠–¢–ê–ü 3: –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è CloudStorage
  const handleSaveSettings = async () => {
    try {
      console.log('[ADVANCED DEMO] üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', userSettings);
      
      const success = await TelegramAdvanced.saveSettings({
        language: userSettings.language,
        theme: userSettings.theme as 'light' | 'dark' | 'auto',
        farmingNotifications: userSettings.notifications,
        preferredCurrency: userSettings.currency as 'UNI' | 'TON'
      });
      
      if (success) {
        setLastOperation('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ CloudStorage');
      } else {
        setLastOperation('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è localStorage)');
      }
    } catch (error) {
      setLastOperation('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è');
    }
  };

  const handleLoadSettings = async () => {
    try {
      console.log('[ADVANCED DEMO] üìñ –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫...');
      
      const settings = await TelegramAdvanced.loadSettings();
      if (settings) {
        setUserSettings({
          language: settings.language || 'ru',
          theme: settings.theme || 'auto',
          notifications: settings.farmingNotifications !== false,
          currency: settings.preferredCurrency || 'UNI'
        });
        setLastOperation('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ CloudStorage');
      } else {
        setLastOperation('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      }
    } catch (error) {
      setLastOperation('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫');
    }
  };

  // –≠–¢–ê–ü 3: –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è SendData
  const handleSendBoostSelection = async () => {
    try {
      console.log('[ADVANCED DEMO] üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ –≤—ã–±–æ—Ä–∞ –±—É—Å—Ç–∞...');
      
      const boostData = {
        type: 'boost_selection',
        boostId: sendDataDemo.selectedBoost,
        userId: 1, // –î–µ–º–æ ID
        timestamp: Date.now()
      };
      
      const success = await TelegramAdvanced.sendToBot(boostData);
      
      if (success) {
        setLastOperation(`–í—ã–±–æ—Ä –±—É—Å—Ç–∞ "${sendDataDemo.selectedBoost}" –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –±–æ—Ç`);
      } else {
        setLastOperation('SendData API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
      }
    } catch (error) {
      setLastOperation('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö');
    }
  };

  const handleSendFarmingResult = async () => {
    try {
      console.log('[ADVANCED DEMO] üå± –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Ñ–∞—Ä–º–∏–Ω–≥–∞...');
      
      const success = await TelegramAdvanced.sendUtils.farmingStarted(1, sendDataDemo.farmingAmount);
      
      if (success) {
        setLastOperation(`–§–∞—Ä–º–∏–Ω–≥ ${sendDataDemo.farmingAmount} UNI –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –±–æ—Ç`);
      } else {
        setLastOperation('SendData API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
      }
    } catch (error) {
      setLastOperation('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞—Ä–º–∏–Ω–≥–∞');
    }
  };

  // –≠–¢–ê–ü 3: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
  const refreshServiceStatus = () => {
    const status = TelegramAdvanced.getStatus();
    setServiceStatus(status);
    setLastOperation('–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω');
  };

  return (
    <div className="container mx-auto p-4">
      <h1 className="text-2xl font-bold mb-6">Telegram Advanced Features Demo</h1>
      
      {/* –≠–¢–ê–ü 3: –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤ */}
      <Card className="mb-6">
        <CardHeader>
          <CardTitle>üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤</CardTitle>
          <CardDescription>–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—Å–µ—Ö Telegram WebApp —Å–µ—Ä–≤–∏—Å–æ–≤</CardDescription>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-4">
            <div className="text-center">
              <div className={`text-2xl mb-2 ${serviceStatus?.advanced?.features?.cloudStorage ? 'text-green-500' : 'text-red-500'}`}>
                {serviceStatus?.advanced?.features?.cloudStorage ? '‚úÖ' : '‚ùå'}
              </div>
              <p className="text-sm font-semibold">CloudStorage</p>
              <p className="text-xs text-muted-foreground">
                {serviceStatus?.advanced?.features?.cloudStorage ? '–î–æ—Å—Ç—É–ø–Ω–æ' : '–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ'}
              </p>
            </div>
            <div className="text-center">
              <div className={`text-2xl mb-2 ${serviceStatus?.advanced?.features?.sendData ? 'text-green-500' : 'text-red-500'}`}>
                {serviceStatus?.advanced?.features?.sendData ? '‚úÖ' : '‚ùå'}
              </div>
              <p className="text-sm font-semibold">SendData</p>
              <p className="text-xs text-muted-foreground">
                {serviceStatus?.advanced?.features?.sendData ? '–î–æ—Å—Ç—É–ø–Ω–æ' : '–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ'}
              </p>
            </div>
            <div className="text-center">
              <div className={`text-2xl mb-2 ${serviceStatus?.advanced?.features?.errorHandling ? 'text-green-500' : 'text-red-500'}`}>
                {serviceStatus?.advanced?.features?.errorHandling ? '‚úÖ' : '‚ùå'}
              </div>
              <p className="text-sm font-semibold">Error Handling</p>
              <p className="text-xs text-muted-foreground">
                {serviceStatus?.advanced?.features?.errorHandling ? '–ê–∫—Ç–∏–≤–Ω–æ' : '–ù–µ–∞–∫—Ç–∏–≤–Ω–æ'}
              </p>
            </div>
          </div>
          
          <div className="flex justify-between items-center">
            <div className="text-sm text-muted-foreground">
              –ü–æ—Å–ª–µ–¥–Ω—è—è –æ–ø–µ—Ä–∞—Ü–∏—è: <span className="font-semibold">{lastOperation || '–ù–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏–π'}</span>
            </div>
            <Button onClick={refreshServiceStatus} variant="outline" size="sm">
              üîÑ –û–±–Ω–æ–≤–∏—Ç—å
            </Button>
          </div>
        </CardContent>
      </Card>

      {/* –≠–¢–ê–ü 3: CloudStorage Demo */}
      <Card className="mb-6">
        <CardHeader>
          <CardTitle>‚òÅÔ∏è CloudStorage API</CardTitle>
          <CardDescription>–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫</CardDescription>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
            <div>
              <Label htmlFor="language">–Ø–∑—ã–∫</Label>
              <Select value={userSettings.language} onValueChange={(value) => 
                setUserSettings(prev => ({...prev, language: value}))
              }>
                <SelectTrigger>
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="ru">–†—É—Å—Å–∫–∏–π</SelectItem>
                  <SelectItem value="en">English</SelectItem>
                  <SelectItem value="uk">–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞</SelectItem>
                </SelectContent>
              </Select>
            </div>
            
            <div>
              <Label htmlFor="theme">–¢–µ–º–∞</Label>
              <Select value={userSettings.theme} onValueChange={(value) => 
                setUserSettings(prev => ({...prev, theme: value}))
              }>
                <SelectTrigger>
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="light">–°–≤–µ—Ç–ª–∞—è</SelectItem>
                  <SelectItem value="dark">–¢–µ–º–Ω–∞—è</SelectItem>
                  <SelectItem value="auto">–ê–≤—Ç–æ</SelectItem>
                </SelectContent>
              </Select>
            </div>
          </div>
          
          <div className="flex space-x-2">
            <Button onClick={handleSaveSettings} variant="default">
              üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            </Button>
            <Button onClick={handleLoadSettings} variant="outline">
              üìñ –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            </Button>
          </div>
        </CardContent>
      </Card>

      {/* –≠–¢–ê–ü 3: SendData Demo */}
      <Card className="mb-6">
        <CardHeader>
          <CardTitle>üì§ SendData API</CardTitle>
          <CardDescription>–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ Telegram-–±–æ—Ç</CardDescription>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
            <div>
              <Label htmlFor="boost">–í—ã–±–æ—Ä –±—É—Å—Ç–∞</Label>
              <Select value={sendDataDemo.selectedBoost} onValueChange={(value) => 
                setSendDataDemo(prev => ({...prev, selectedBoost: value}))
              }>
                <SelectTrigger>
                  <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –±—É—Å—Ç" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="speed_boost">Speed Boost</SelectItem>
                  <SelectItem value="double_boost">Double Boost</SelectItem>
                  <SelectItem value="mega_boost">Mega Boost</SelectItem>
                </SelectContent>
              </Select>
            </div>
            
            <div>
              <Label htmlFor="farming">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞—Ä–º–∏–Ω–≥–∞</Label>
              <Input
                type="number"
                value={sendDataDemo.farmingAmount}
                onChange={(e) => setSendDataDemo(prev => ({
                  ...prev, 
                  farmingAmount: parseInt(e.target.value) || 0
                }))}
                placeholder="100"
              />
            </div>
          </div>
          
          <div className="flex space-x-2">
            <Button 
              onClick={handleSendBoostSelection} 
              variant="default"
              disabled={!sendDataDemo.selectedBoost}
            >
              üöÄ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—ã–±–æ—Ä –±—É—Å—Ç–∞
            </Button>
            <Button onClick={handleSendFarmingResult} variant="outline">
              üå± –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ñ–∞—Ä–º–∏–Ω–≥–∞
            </Button>
          </div>
        </CardContent>
      </Card>

      {/* –≠–¢–ê–ü 3: –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ */}
      <Card className="mb-6">
        <CardHeader>
          <CardTitle>üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-3 text-sm">
            <div>
              <strong>CloudStorage:</strong> –ò–∑–º–µ–Ω–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –Ω–∞–∂–º–∏—Ç–µ "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å". 
              –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è—Ç—Å—è –≤ Telegram CloudStorage –∏–ª–∏ localStorage –∫–∞–∫ fallback.
            </div>
            <div>
              <strong>SendData:</strong> –í—ã–±–µ—Ä–∏—Ç–µ –±—É—Å—Ç –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞—Ä–º–∏–Ω–≥–∞ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ. 
              –ï—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –≤ Telegram, –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –±–æ—Ç—É.
            </div>
            <div>
              <strong>Error Handling:</strong> –í—Å–µ –æ—à–∏–±–∫–∏ –ª–æ–≥–∏—Ä—É—é—Ç—Å—è –≤ –∫–æ–Ω—Å–æ–ª—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ [TG ERROR] method ‚Äî message.
            </div>
            <div className="text-muted-foreground">
              <strong>–õ–æ–≥–∏:</strong> –û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –∏ –æ—à–∏–±–æ–∫.
            </div>
          </div>
        </CardContent>
      </Card>

      {/* –§–ò–ù–ê–õ–¨–ù–û–ï –ó–ê–í–ï–†–®–ï–ù–ò–ï: –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è Telegram Mini App */}
      <Card>
        <CardHeader>
          <CardTitle>üö™ –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</CardTitle>
          <CardDescription>
            –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã Telegram Mini App
          </CardDescription>
        </CardHeader>
        <CardContent>
          <div className="space-y-4">
            <div className="text-sm text-muted-foreground">
              <p>–ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ Telegram.WebApp.close().</p>
              <p>–í –∫–æ–Ω—Å–æ–ª–∏ –ø–æ—è–≤–∏—Ç—Å—è –ª–æ–≥: <code>[TG CLOSE CLICKED]</code></p>
            </div>
            
            <div className="flex justify-center space-x-4">
              <ForceRefreshButton 
                variant="secondary" 
                size="lg" 
                showIcon={true}
              />
              <TelegramCloseButton 
                variant="destructive" 
                size="lg" 
                showIcon={true}
              />
            </div>
            
            <div className="text-xs text-muted-foreground text-center">
              <strong>–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:</strong> –ï—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –Ω–µ –≤ Telegram, 
              –∫–Ω–æ–ø–∫–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç fallback –Ω–∞–≤–∏–≥–∞—Ü–∏—é –Ω–∞–∑–∞–¥ –≤ –±—Ä–∞—É–∑–µ—Ä–µ.
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default TelegramAdvancedDemo;