/**
 * –≠–¢–ê–ü 2: React —Ö—É–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∞–º–∏ Telegram WebApp
 * 
 * –≠—Ç–æ—Ç —Ö—É–∫ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç:
 * 1. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∞–º–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –º–∞—Ä—à—Ä—É—Ç–∞
 * 2. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å —Ä–æ—É—Ç–∏–Ω–≥–æ–º wouter
 * 3. –ü—Ä–æ—Å—Ç–æ–π API –¥–ª—è –ø–æ–∫–∞–∑–∞/—Å–∫—Ä—ã—Ç–∏—è –∫–Ω–æ–ø–æ–∫
 * 4. –û–±—Ä–∞–±–æ—Ç–∫—É –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
 */

import { useEffect } from 'react';
import { useLocation } from 'wouter';
import { 
  autoConfigureButtonsForRoute,
  showMainButton,
  hideMainButton,
  showBackButton,
  hideBackButton,
  getButtonState,
  ButtonConfigs
} from '../services/telegramButtonService';

// –≠–¢–ê–ü 2: –¢–∏–ø –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–Ω–æ–ø–∫–∏
type ButtonClickHandler = () => void;

/**
 * –≠–¢–ê–ü 2: –û—Å–Ω–æ–≤–Ω–æ–π —Ö—É–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∞–º–∏ Telegram WebApp
 */
export function useTelegramButtons() {
  const [location, setLocation] = useLocation();

  // –≠–¢–ê–ü 2: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–æ–∫ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –º–∞—Ä—à—Ä—É—Ç–∞
  useEffect(() => {
    console.log(`[TELEGRAM BUTTONS HOOK] üéØ –ú–∞—Ä—à—Ä—É—Ç –∏–∑–º–µ–Ω–∏–ª—Å—è: ${location}`);
    
    // –≠–¢–ê–ü 2: –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–º –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    autoConfigureButtonsForRoute(location);
    
  }, [location]);

  // –≠–¢–ê–ü 2: –í–æ–∑–≤—Ä–∞—â–∞–µ–º API –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∞–º–∏
  return {
    // –¢–µ–∫—É—â–µ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ
    currentRoute: location,
    
    // –ù–∞–≤–∏–≥–∞—Ü–∏—è
    navigate: setLocation,
    
    // API –¥–ª—è MainButton
    showMainButton: (text: string, handler: ButtonClickHandler) => {
      console.log(`[TELEGRAM BUTTONS HOOK] üîò –ü–æ–∫–∞–∑ MainButton: "${text}"`);
      return showMainButton(text, handler);
    },
    
    hideMainButton: () => {
      console.log('[TELEGRAM BUTTONS HOOK] üîò –°–∫—Ä—ã—Ç–∏–µ MainButton');
      return hideMainButton();
    },
    
    // API –¥–ª—è BackButton  
    showBackButton: (targetRoute?: string, customHandler?: ButtonClickHandler) => {
      console.log('[TELEGRAM BUTTONS HOOK] ‚¨ÖÔ∏è –ü–æ–∫–∞–∑ BackButton');
      const navigationHandler = (route: string) => {
        console.log(`[TELEGRAM BUTTONS HOOK] üè† –ù–∞–≤–∏–≥–∞—Ü–∏—è: ${route}`);
        setLocation(route);
      };
      return showBackButton(targetRoute, customHandler || (() => navigationHandler(targetRoute || '/')));
    },
    
    hideBackButton: () => {
      console.log('[TELEGRAM BUTTONS HOOK] ‚¨ÖÔ∏è –°–∫—Ä—ã—Ç–∏–µ BackButton');
      return hideBackButton();
    },
    
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
    getState: getButtonState,
    
    // –ü—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    configs: ButtonConfigs
  };
}

/**
 * –≠–¢–ê–ü 2: –•—É–∫ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ñ–∞—Ä–º–∏–Ω–≥–∞
 */
export function useFarmingButtons() {
  const buttons = useTelegramButtons();
  
  return {
    ...buttons,
    
    // –≠–¢–ê–ü 2: –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è —Ñ–∞—Ä–º–∏–Ω–≥–∞
    showStartFarming: (onStart: ButtonClickHandler) => {
      console.log('[FARMING BUTTONS] üå± –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∞—á–∞–ª–∞ —Ñ–∞—Ä–º–∏–Ω–≥–∞');
      return buttons.showMainButton("–ù–∞—á–∞—Ç—å —Ñ–∞—Ä–º–∏–Ω–≥", () => {
        console.log('[FARMING BUTTONS] üå± –§–∞—Ä–º–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ —Ö—É–∫');
        onStart();
      });
    },
    
    showHarvestFarming: (onHarvest: ButtonClickHandler) => {
      console.log('[FARMING BUTTONS] üåæ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–∫–∏ —Å–±–æ—Ä–∞ —É—Ä–æ–∂–∞—è');
      return buttons.showMainButton("–°–æ–±—Ä–∞—Ç—å —É—Ä–æ–∂–∞–π", () => {
        console.log('[FARMING BUTTONS] üåæ –£—Ä–æ–∂–∞–π —Å–æ–±—Ä–∞–Ω —á–µ—Ä–µ–∑ —Ö—É–∫');
        onHarvest();
      });
    },
    
    showBackToHome: () => {
      console.log('[FARMING BUTTONS] üè† –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞ –≥–ª–∞–≤–Ω—É—é');
      return buttons.showBackButton('/', () => {
        console.log('[FARMING BUTTONS] üè† –í–æ–∑–≤—Ä–∞—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é –∏–∑ —Ñ–∞—Ä–º–∏–Ω–≥–∞');
        buttons.navigate('/');
      });
    }
  };
}

/**
 * –≠–¢–ê–ü 2: –•—É–∫ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –±—É—Å—Ç–æ–≤
 */
export function useBoostButtons() {
  const buttons = useTelegramButtons();
  
  return {
    ...buttons,
    
    // –≠–¢–ê–ü 2: –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –±—É—Å—Ç–æ–≤
    showOpenBoost: (onBoost: ButtonClickHandler) => {
      console.log('[BOOST BUTTONS] üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–∫–∏ –æ—Ç–∫—Ä—ã—Ç–∏—è –±—É—Å—Ç–∞');
      return buttons.showMainButton("–û—Ç–∫—Ä—ã—Ç—å Boost", () => {
        console.log('[BOOST BUTTONS] üöÄ Boost –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω —á–µ—Ä–µ–∑ —Ö—É–∫');
        onBoost();
      });
    },
    
    showPurchaseBoost: (onPurchase: ButtonClickHandler) => {
      console.log('[BOOST BUTTONS] üíé –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–∫–∏ –ø–æ–∫—É–ø–∫–∏ –±—É—Å—Ç–∞');
      return buttons.showMainButton("–ö—É–ø–∏—Ç—å Boost", () => {
        console.log('[BOOST BUTTONS] üíé Boost –∫—É–ø–ª–µ–Ω —á–µ—Ä–µ–∑ —Ö—É–∫');
        onPurchase();
      });
    },
    
    showBackToHome: () => {
      console.log('[BOOST BUTTONS] üè† –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞ –≥–ª–∞–≤–Ω—É—é');
      return buttons.showBackButton('/', () => {
        console.log('[BOOST BUTTONS] üè† –í–æ–∑–≤—Ä–∞—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é –∏–∑ –±—É—Å—Ç–æ–≤');
        buttons.navigate('/');
      });
    }
  };
}

/**
 * –≠–¢–ê–ü 2: –•—É–∫ –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ (–≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
 */
export function useHomeButtons() {
  const buttons = useTelegramButtons();
  
  useEffect(() => {
    // –≠–¢–ê–ü 2: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    console.log('[HOME BUTTONS] üè† –°–∫—Ä—ã—Ç–∏–µ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π');
    buttons.hideMainButton();
    buttons.hideBackButton();
  }, []);
  
  return {
    ...buttons,
    
    // –≠–¢–ê–ü 2: –ú–µ—Ç–æ–¥—ã –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –ø–æ–∫–∞–∑–∞ –∫–Ω–æ–ø–æ–∫ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π
    showTemporaryAction: (text: string, handler: ButtonClickHandler) => {
      console.log(`[HOME BUTTONS] ‚ö° –í—Ä–µ–º–µ–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞: "${text}"`);
      return buttons.showMainButton(text, handler);
    }
  };
}