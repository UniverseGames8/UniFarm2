/**
 * –°—Ç–≤–æ—Ä—é—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ ID 1 –¥–ª—è –≤–∞—à–æ—ó –ø—Ä–∞–≤–∏–ª—å–Ω–æ—ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
 */

import { Pool } from 'pg';

const correctDbConfig = {
  connectionString: 'postgresql://neondb_owner:npg_SpgdNBV70WKl@ep-lucky-boat-a463bggt-pooler.us-east-1.aws.neon.tech/neondb?sslmode=require'
};

async function createUserWithId1() {
  console.log('üîç –ü–µ—Ä–µ–≤—ñ—Ä—è—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —É –ø—Ä–∞–≤–∏–ª—å–Ω—ñ–π –±–∞–∑—ñ...');
  
  const pool = new Pool(correctDbConfig);
  
  try {
    // –°–ø–æ—á–∞—Ç–∫—É –¥–∏–≤–∏–º–æ—Å—å, —è–∫—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ —î
    const existingUsers = await pool.query('SELECT id, username, telegram_id FROM users ORDER BY id LIMIT 15');
    console.log('üë• –Ü—Å–Ω—É—é—á—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ:');
    existingUsers.rows.forEach(user => {
      console.log(`  ID ${user.id}: ${user.username} (Telegram: ${user.telegram_id})`);
    });
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ ID 1
    const user1Check = await pool.query('SELECT * FROM users WHERE id = 1');
    
    if (user1Check.rows.length === 0) {
      console.log('‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ ID 1 –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π. –°—Ç–≤–æ—Ä—é—é...');
      
      // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ ID 1
      await pool.query(
        'INSERT INTO users (id, username, telegram_id, ref_code, created_at) VALUES ($1, $2, $3, $4, NOW())',
        [1, 'main_test_user', 100000001, 'MAIN001']
      );
      
      console.log('‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ ID 1 —Å—Ç–≤–æ—Ä–µ–Ω–∏–π —É—Å–ø—ñ—à–Ω–æ!');
    } else {
      console.log('‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ ID 1 –≤–∂–µ —ñ—Å–Ω—É—î:', user1Check.rows[0]);
    }
    
    // –ü–æ–∫–∞–∑—É—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–∏–π —Å–ø–∏—Å–æ–∫
    const finalCount = await pool.query('SELECT COUNT(*) as count FROM users');
    console.log(`üë• –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤: ${finalCount.rows[0].count}`);
    
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞:', error.message);
  } finally {
    await pool.end();
  }
}

createUserWithId1();