/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞ Telegram –±–æ—Ç–∞
 */
import fetch from 'node-fetch';

// –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
const BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
if (!BOT_TOKEN) {
  console.error('‚ùå –û—à–∏–±–∫–∞: TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
  process.exit(1);
}

console.log(`üîë –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞: ${BOT_TOKEN.substring(0, 10)}...`);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ API Telegram
async function checkBotToken() {
  try {
    console.log('üîç –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ Telegram API...');
    
    const response = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/getMe`, {
      method: 'GET',
      headers: { 'Content-Type': 'application/json' }
    });
    
    const result = await response.json();
    
    if (result.ok) {
      console.log('‚úÖ –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω! –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:');
      console.log(`   ID: ${result.result.id}`);
      console.log(`   –ò–º—è: ${result.result.first_name}`);
      console.log(`   Username: @${result.result.username}`);
      console.log(`   –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤—Å—Ç—Ä–∞–∏–≤–∞–Ω–∏–µ –≤ —á–∞—Ç—ã: ${result.result.can_join_groups ? '–î–∞' : '–ù–µ—Ç'}`);
      console.log(`   –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç inline-—Ä–µ–∂–∏–º: ${result.result.supports_inline_queries ? '–î–∞' : '–ù–µ—Ç'}`);
      return true;
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞:');
      console.error(`   –ö–æ–¥ –æ—à–∏–±–∫–∏: ${result.error_code}`);
      console.error(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${result.description}`);
      return false;
    }
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞:', error);
    return false;
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
checkBotToken().then(isValid => {
  if (isValid) {
    console.log('‚úÖ –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é');
  } else {
    console.error('‚ùå –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∏–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ');
    process.exit(1);
  }
}).catch(error => {
  console.error('‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
  process.exit(1);
});