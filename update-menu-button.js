/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è URL –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –±–æ—Ç–∞ –Ω–∞ —Ç–µ–∫—É—â–∏–π URL —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
 */

import * as dotenv from 'dotenv';
import fetch from 'node-fetch';

dotenv.config();

async function callTelegramApi(method, data = {}) {
  const botToken = process.env.TELEGRAM_BOT_TOKEN;
  if (!botToken) {
    console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
    process.exit(1);
  }

  const url = `https://api.telegram.org/bot${botToken}/${method}`;
  const response = await fetch(url, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify(data),
  });

  return response.json();
}

async function getCurrentDevelopmentUrl() {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –ø–µ—Ä–µ–¥–∞–Ω URL —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
  if (process.env.DEPLOY_URL) {
    return process.env.DEPLOY_URL;
  }
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º URL –Ω–∞ –æ—Å–Ω–æ–≤–µ Replit –¥–∞–Ω–Ω—ã—Ö
  const protocol = 'https://';
  // –ü–æ—Å–ª–µ –¥–µ–ø–ª–æ—è URL —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è {slug}-{owner}.replit.app
  const baseUrl = process.env.REPL_SLUG + '-' + process.env.REPL_OWNER + '.replit.app';
  return protocol + baseUrl;
}

async function updateMenuButton() {
  console.log('\nüì± –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ URL –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –±–æ—Ç–∞\n');

  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π URL —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
  const devUrl = await getCurrentDevelopmentUrl();
  console.log(`‚û§ –¢–µ–∫—É—â–∏–π URL —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏: ${devUrl}`);

  // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –º–µ–Ω—é
  const menuButton = {
    type: 'web_app',
    text: '–û—Ç–∫—Ä—ã—Ç—å UniFarm',
    web_app: {
      url: devUrl,
    },
  };

  console.log(`‚û§ –û–±–Ω–æ–≤–ª—è–µ–º URL –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –Ω–∞: ${devUrl}`);
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –º–µ–Ω—é
  const result = await callTelegramApi('setChatMenuButton', {
    menu_button: menuButton,
  });

  if (result.ok) {
    console.log('‚úÖ –ö–Ω–æ–ø–∫–∞ –º–µ–Ω—é —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
  } else {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é: ${result.description}`);
    process.exit(1);
  }

  console.log('\n‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ URL –∑–∞–≤–µ—Ä—à–µ–Ω–æ\n');
}

updateMenuButton().catch(error => {
  console.error('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:', error);
  process.exit(1);
});