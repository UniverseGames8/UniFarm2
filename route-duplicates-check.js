/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –º–∞—Ä—à—Ä—É—Ç–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ UniFarm
 * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç routes-new.ts –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
 */

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

console.log('üîç –ü–†–û–í–ï–†–ö–ê –£–°–¢–†–ê–ù–ï–ù–ò–Ø –î–£–ë–õ–ò–ö–ê–¢–û–í –ú–ê–†–®–†–£–¢–û–í\n');

function checkRouteDuplicates() {
  const routesFile = path.join(__dirname, 'server', 'routes-new.ts');
  
  if (!fs.existsSync(routesFile)) {
    console.log('‚ùå –§–∞–π–ª routes-new.ts –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }
  
  const content = fs.readFileSync(routesFile, 'utf8');
  
  // –ü–æ–∏—Å–∫ –º–∞—Ä—à—Ä—É—Ç–æ–≤ Daily Bonus
  const dailyBonusRoutes = [
    '/api/v2/daily-bonus/status',
    '/api/v2/daily-bonus/claim',
    '/api/v2/daily-bonus/streak-info'
  ];
  
  // –ü–æ–∏—Å–∫ –º–∞—Ä—à—Ä—É—Ç–æ–≤ Missions
  const missionRoutes = [
    '/api/v2/missions/active',
    '/api/v2/missions/complete',
    '/api/v2/user-missions'
  ];
  
  console.log('üìä –ê–ù–ê–õ–ò–ó –ú–ê–†–®–†–£–¢–û–í DAILY BONUS:');
  dailyBonusRoutes.forEach(route => {
    const matches = content.split(route).length - 1;
    console.log(`  ${route}: ${matches} –≤—Ö–æ–∂–¥–µ–Ω–∏–π ${matches > 1 ? '‚ö†Ô∏è  –î–£–ë–õ–ò–ö–ê–¢!' : '‚úÖ'}`);
  });
  
  console.log('\nüìä –ê–ù–ê–õ–ò–ó –ú–ê–†–®–†–£–¢–û–í MISSIONS:');
  missionRoutes.forEach(route => {
    const matches = content.split(route).length - 1;
    console.log(`  ${route}: ${matches} –≤—Ö–æ–∂–¥–µ–Ω–∏–π ${matches > 1 ? '‚ö†Ô∏è  –î–£–ë–õ–ò–ö–ê–¢!' : '‚úÖ'}`);
  });
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –±–ª–æ–∫–æ–≤
  const removedBlocks = [
    '–î—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –º–∏—Å—Å–∏–π —É–¥–∞–ª–µ–Ω—ã',
    '–î—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã Daily Bonus —É–¥–∞–ª–µ–Ω—ã'
  ];
  
  console.log('\nüßπ –ü–†–û–í–ï–†–ö–ê –£–î–ê–õ–ï–ù–ù–´–• –ë–õ–û–ö–û–í:');
  removedBlocks.forEach(block => {
    const found = content.includes(block);
    console.log(`  ${block}: ${found ? '‚úÖ –ù–∞–π–¥–µ–Ω' : '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω'}`);
  });
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—á–∏—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ UNI/TON
  const workingRoutes = [
    '/api/v2/uni-farming/status',
    '/api/v2/ton-farming/info'
  ];
  
  console.log('\nüí™ –ü–†–û–í–ï–†–ö–ê –†–ê–ë–û–ß–ò–• –ú–ê–†–®–†–£–¢–û–í:');
  workingRoutes.forEach(route => {
    const matches = content.split(route).length - 1;
    console.log(`  ${route}: ${matches} –≤—Ö–æ–∂–¥–µ–Ω–∏–π ${matches === 1 ? '‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ' : '‚ö†Ô∏è  –ü—Ä–æ–±–ª–µ–º–∞'}`);
  });
  
  console.log('\nüìà –ò–¢–û–ì–û–í–´–ô –°–¢–ê–¢–£–°:');
  
  // –ü–æ–¥—Å—á–µ—Ç –æ–±—â–∏—Ö –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
  const allCriticalRoutes = [...dailyBonusRoutes, ...missionRoutes];
  const duplicateCount = allCriticalRoutes.filter(route => {
    return (content.split(route).length - 1) > 1;
  }).length;
  
  if (duplicateCount === 0) {
    console.log('‚úÖ –í–°–ï –î–£–ë–õ–ò–ö–ê–¢–´ –ú–ê–†–®–†–£–¢–û–í –£–°–¢–†–ê–ù–ï–ù–´!');
    console.log('‚úÖ Daily Bonus –∏ Missions –¥–æ–ª–∂–Ω—ã —Ä–∞–±–æ—Ç–∞—Ç—å —Å—Ç–∞–±–∏–ª—å–Ω–æ');
    console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é');
  } else {
    console.log(`‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ ${duplicateCount} –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –º–∞—Ä—à—Ä—É—Ç–æ–≤`);
    console.log('‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞');
  }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏
checkRouteDuplicates();