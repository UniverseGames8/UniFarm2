/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Mini App –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
 */

import fetch from 'node-fetch';
import { exec } from 'child_process';
import { promisify } from 'util';

const execAsync = promisify(exec);
const botToken = process.env.TELEGRAM_BOT_TOKEN;

async function callTelegramApi(method, data = {}) {
  try {
    const url = `https://api.telegram.org/bot${botToken}/${method}`;
    const response = await fetch(url, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(data),
    });
    
    const result = await response.json();
    return result;
  } catch (error) {
    console.error(`Error calling Telegram API (${method}):`, error);
    return { ok: false, error: error.message };
  }
}

async function getWebhookInfo() {
  return await callTelegramApi('getWebhookInfo');
}

async function getMenuButton() {
  return await callTelegramApi('getMyCommands');
}

async function checkDomain() {
  try {
    const domainUrl = 'https://uni-farm-connect-2-misterxuniverse.replit.app';
    console.log(`\n–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –¥–æ–º–µ–Ω–∞: ${domainUrl}`);
    
    const response = await fetch(domainUrl);
    console.log(`- –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: ${response.status} ${response.statusText}`);
    console.log(`- –î–æ–º–µ–Ω –¥–æ—Å—Ç—É–ø–µ–Ω: ${response.ok ? '–î–ê ‚úÖ' : '–ù–ï–¢ ‚ùå'}`);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ CORS –∏ Content-Security-Policy
    const headers = response.headers;
    console.log('\n–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:');
    
    // –ê–Ω–∞–ª–∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ CORS
    const corsHeaders = [
      'Access-Control-Allow-Origin',
      'Access-Control-Allow-Methods',
      'Access-Control-Allow-Headers'
    ];
    
    corsHeaders.forEach(header => {
      const value = headers.get(header);
      console.log(`- ${header}: ${value || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}`);
    });
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ CSP
    const csp = headers.get('Content-Security-Policy');
    console.log(`- Content-Security-Policy: ${csp ? '—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}`);
    
    return response.ok;
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–æ–º–µ–Ω–∞: ${error.message}`);
    return false;
  }
}

async function validateTelegramURL() {
  const correctURL = 'https://uni-farm-connect-2-misterxuniverse.replit.app';
  const correctTMEURL = 'https://t.me/UniFarming_Bot/UniFarm';
  
  console.log('\n–ü—Ä–æ–≤–µ—Ä–∫–∞ URL –¥–ª—è Telegram Mini App:');
  console.log(`- –¢–µ–∫—É—â–∞—è —Å—Å—ã–ª–∫–∞ t.me: ${correctTMEURL}`);
  console.log(`- –û–∂–∏–¥–∞–µ–º—ã–π URL –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: ${correctURL}`);
  
  console.log('\n–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è BotFather:');
  console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ BotFather, –≤—ã–±–µ—Ä–∏—Ç–µ @UniFarming_Bot');
  console.log('2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ "Bot Settings" ‚Üí "Menu Button"');
  console.log('   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–∞–º —É–∫–∞–∑–∞–Ω —Ç–æ—á–Ω—ã–π URL –±–µ–∑ —Å–ª—ç—à–∞ –≤ –∫–æ–Ω—Ü–µ:');
  console.log(`   ${correctURL}`);
  console.log('3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ "Bot Settings" ‚Üí "Mini Apps"');
  console.log('   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–æ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–æ—á–Ω–æ —Ç–∞–∫–∏–º –∂–µ)');
  
  console.log('\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤ Mini App –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ—Ä–æ—Ç–∫–æ–µ –∏–º—è "unifarm" (–±–µ–∑ –∫–∞–≤—ã—á–µ–∫)');
}

async function checkAppMetaTags() {
  try {
    const domainUrl = 'https://uni-farm-connect-2-misterxuniverse.replit.app';
    console.log(`\n–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç–∞-—Ç–µ–≥–æ–≤ –¥–ª—è Telegram Mini App:`);
    
    const { stdout } = await execAsync(`curl -s ${domainUrl} | grep -i "viewport\\|telegram"`, { shell: '/bin/bash' });
    
    if (stdout.includes('viewport') || stdout.includes('Telegram')) {
      console.log('- –ù–∞–π–¥–µ–Ω—ã —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –º–µ—Ç–∞-—Ç–µ–≥–∏:');
      stdout.split('\n').filter(line => line.trim()).forEach(line => {
        console.log(`  ${line.trim()}`);
      });
    } else {
      console.log('- –ù–µ –Ω–∞–π–¥–µ–Ω—ã —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –º–µ—Ç–∞-—Ç–µ–≥–∏ –¥–ª—è Telegram Mini App');
      console.log('  –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å:');
      console.log('  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />');
      console.log('  <meta name="telegram-web-app-ready" content="true" />');
    }
  } catch (error) {
    console.log('- –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –º–µ—Ç–∞-—Ç–µ–≥–∏:', error.message);
  }
}

async function testWebAppAvailability() {
  console.log('\n–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é Mini App:');
  console.log('1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∫–ª–∏–µ–Ω—Ç Telegram –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
  console.log('2. –û—Ç–∫—Ä–æ–π—Ç–µ –±–æ—Ç–∞ @UniFarming_Bot');
  console.log('3. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –º–µ–Ω—é –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /app');
  console.log('4. –ü—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ Telegram, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –Ω–∞ –Ω–∞–ª–∏—á–∏–µ');
  console.log('   –æ–±—ä–µ–∫—Ç–∞ window.Telegram.WebApp');
  console.log('\n–ï—Å–ª–∏ window.Telegram –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ BotFather:');
  console.log('- –í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ URL (https://uni-farm-connect-2-misterxuniverse.replit.app)');
  console.log('- –ù–µ—Ç –ª–∏ –æ–ø–µ—á–∞—Ç–æ–∫ –∏–ª–∏ –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–ª—ç—à–∞ "/" –≤ –∫–æ–Ω—Ü–µ)?');
  console.log('- –ü—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ç–∏–ø –∫–Ω–æ–ø–∫–∏ "web_app" (–∞ –Ω–µ –æ–±—ã—á–Ω–∞—è —Å—Å—ã–ª–∫–∞)?');
}

async function main() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Telegram Mini App\n');
    
    const webhookInfo = await getWebhookInfo();
    if (webhookInfo.ok) {
      console.log('Webhook –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:');
      console.log(`- URL: ${webhookInfo.result.url}`);
      console.log(`- –ê–∫—Ç–∏–≤–µ–Ω: ${webhookInfo.result.hasCustomCertificate ? '–î–ê ‚úÖ' : '–ù–ï–¢ ‚ùå'}`);
      console.log(`- –û–∂–∏–¥–∞—é—â–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${webhookInfo.result.pending_update_count}`);
    } else {
      console.log('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook:', webhookInfo.description);
    }
    
    const domainAvailable = await checkDomain();
    if (!domainAvailable) {
      console.log('\n‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ! –î–æ–º–µ–Ω –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–∏—á–∏–Ω–æ–π –ø—Ä–æ–±–ª–µ–º.');
    }
    
    await validateTelegramURL();
    await checkAppMetaTags();
    await testWebAppAvailability();
    
    console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    console.log('üìã –î–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å–ª–µ–¥—É–π—Ç–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º –≤—ã—à–µ');
  } catch (error) {
    console.error('–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞:', error);
  }
}

main();