/**
 * –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ —á–µ—Ä–µ–∑ Replit
 * 
 * –≠—Ç–æ—Ç —Ñ–∞–π–ª –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É Run –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ Replit
 */

'use strict';

const { spawn } = require('child_process');
const fs = require('fs');
const path = require('path');

// –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–ø—É—Å–∫–µ
console.log('üöÄ UniFarm - –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É Run');
console.log('‚è±Ô∏è –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞:', new Date().toISOString());

// –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤
const logsDir = path.join(__dirname, 'logs');
if (!fs.existsSync(logsDir)) {
  fs.mkdirSync(logsDir, { recursive: true });
}

// –§–∞–π–ª –¥–ª—è –ª–æ–≥–æ–≤
const logFile = path.join(logsDir, `replit-run-${Date.now()}.log`);
const logStream = fs.createWriteStream(logFile, { flags: 'a' });

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
function log(message) {
  const timestamp = new Date().toISOString();
  const formattedMsg = `[${timestamp}] ${message}`;
  console.log(formattedMsg);
  logStream.write(formattedMsg + '\n');
}

log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ UniFarm...');

// –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç —Å–µ—Ä–≤–µ—Ä–∞
const serverProcess = spawn('node', ['start.cjs'], {
  stdio: 'inherit',
  env: {
    ...process.env,
    NODE_ENV: 'production',
    REPLIT_RUN: 'true' // –ú–∞—Ä–∫–µ—Ä –∑–∞–ø—É—Å–∫–∞ —á–µ—Ä–µ–∑ Replit
  }
});

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏—è —Å–µ—Ä–≤–µ—Ä–∞
serverProcess.on('close', (code) => {
  log(`‚ö†Ô∏è –ü—Ä–æ—Ü–µ—Å—Å —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –∫–æ–¥–æ–º ${code}`);
  log('üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã...');
  
  // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π
  setTimeout(() => {
    log('üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞...');
    
    const newProcess = spawn('node', ['start.cjs'], {
      stdio: 'inherit',
      env: {
        ...process.env,
        NODE_ENV: 'production',
        REPLIT_RUN: 'true',
        RESTART_COUNT: process.env.RESTART_COUNT ? 
          (parseInt(process.env.RESTART_COUNT) + 1).toString() : '1'
      }
    });
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å
    serverProcess = newProcess;
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π –Ω–æ–≤–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
    setupProcessHandlers(newProcess);
  }, 3000);
});

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è –ø—Ä–æ—Ü–µ—Å—Å–∞
function setupProcessHandlers(proc) {
  proc.on('error', (err) => {
    log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞: ${err.message}`);
  });
}

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã
process.on('SIGINT', () => {
  log('‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGINT, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º');
});

process.on('SIGTERM', () => {
  log('‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGTERM, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º');
});

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è
process.on('uncaughtException', (err) => {
  log(`‚ùå –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: ${err.message}`);
  log('‚úÖ –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É –ø—Ä–æ—Ü–µ—Å—Å–∞ –∑–∞–ø—É—Å–∫–∞');
});

// –î–µ—Ä–∂–∏–º –ø—Ä–æ—Ü–µ—Å—Å –∞–∫—Ç–∏–≤–Ω—ã–º
setInterval(() => {}, 1000);

log('‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ!');